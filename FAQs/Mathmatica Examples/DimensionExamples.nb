(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    201037,       4196]
NotebookOptionsPosition[    197014,       4062]
NotebookOutlinePosition[    197478,       4079]
CellTagsIndexPosition[    197435,       4076]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Examples of identifying different network dimensions", "Title",
 CellChangeTimes->{{3.6632659990321703`*^9, 3.663266016691059*^9}}],

Cell[CellGroupData[{

Cell["1-d networks:", "Subchapter",
 CellChangeTimes->{{3.6324029543735123`*^9, 3.6324029808062987`*^9}, 
   3.632403065117955*^9, 3.6632660568470497`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"#", "-", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], "&"}], " ",
            "/@", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#", ",", "0"}], "}"}], "&"}], " ", "/@", " ", 
             RowBox[{"Range", "[", "n", "]"}]}], ")"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"FreeQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "_"}], "}"}]}], "]"}], "&"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "White", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Disk", "[", 
          RowBox[{"#", ",", 
           RowBox[{".2", " ", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"5", ",", "n"}], "]"}], "/", "10"}]}]}], "]"}], "&"}], 
        " ", "/@", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", "0"}], "}"}], "&"}], " ", "/@", " ", 
          RowBox[{"Range", "[", "n", "]"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", "#", "]"}], "-", "n"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"_", "?", "Negative"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Total", "[", "#", "]"}], ",", "#"}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", "0", ",", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Total", "[", "#", "]"}], ",", "#"}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"_", "?", "Positive"}], ",", 
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Total", "[", "#", "]"}], ",", "#"}], "]"}]}], "}"}]}],
           "\[IndentingNewLine]", "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", "0"}], "}"}], "&"}], " ", "/@", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Max", "[", 
            RowBox[{"20", ",", "n"}], "]"}], "]"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"\"\<Within \>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"n", "-", "1"}], "]"}], "<>", "\"\< steps: \>\"", "<>", 
            RowBox[{"ToString", "@", 
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Total", "[", "#", "]"}], "&"}], " ", "/@", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"#", ",", "0"}], "}"}], "&"}], " ", "/@", " ", 
                  RowBox[{"Range", "[", "n", "]"}]}], ")"}]}], ",", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"#", "\[LessEqual]", "n"}], "&"}], ")"}]}]}], 
              "]"}]}], "<>", "\"\< node\>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"n", ">", "1"}], ",", "\"\<s\>\"", ",", "\"\<\>\""}], 
             "]"}]}], ",", "Large", ",", "Red"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{".2", 
            RowBox[{"Max", "[", 
             RowBox[{"5", ",", "n"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "250"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "1"}], "}"}], ",", "1", ",", "20", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6323477201532316`*^9, 3.632347803793461*^9}, {
   3.6323504432687664`*^9, 3.6323505175256767`*^9}, {3.6323505821236105`*^9, 
   3.6323506406691427`*^9}, {3.6323507077633677`*^9, 3.632350828613344*^9}, {
   3.6323509759798717`*^9, 3.6323509798238144`*^9}, {3.632351025839198*^9, 
   3.6323511326217337`*^9}, {3.632351355543482*^9, 3.632351368044112*^9}, {
   3.632390067730847*^9, 3.632390092215808*^9}, {3.632390174386894*^9, 
   3.6323901872777696`*^9}, {3.632390248955903*^9, 3.63239025705005*^9}, {
   3.6323903208300514`*^9, 3.632390446121704*^9}, {3.632390489620778*^9, 
   3.6323904995743904`*^9}, {3.6323905792777133`*^9, 
   3.6323906330283694`*^9}, {3.632390853175355*^9, 3.6323908566834726`*^9}, {
   3.6323911028866005`*^9, 3.6323911054648523`*^9}, {3.6323914094796195`*^9, 
   3.632391417698778*^9}, {3.632391460871908*^9, 3.6323914775801287`*^9}, {
   3.632391633654317*^9, 3.6323916338730717`*^9}, 3.632391666683631*^9, {
   3.6323922583770022`*^9, 3.6323922885106792`*^9}, {3.6323923424957747`*^9, 
   3.6323923460428257`*^9}, {3.6323923782470846`*^9, 3.632392411095281*^9}, {
   3.6323924502772303`*^9, 3.632392454524577*^9}, {3.632392559731563*^9, 
   3.6323926934203997`*^9}, {3.6324011465097675`*^9, 3.632401157166649*^9}, {
   3.6324013529557533`*^9, 3.6324013820904303`*^9}, {3.632401537682335*^9, 
   3.632401537869841*^9}, {3.6324015759397516`*^9, 3.6324016534172053`*^9}, {
   3.632401746191844*^9, 3.6324017482602434`*^9}, {3.6324017850903516`*^9, 
   3.6324017891583047`*^9}, {3.6324019039503536`*^9, 3.6324019041378636`*^9}, 
   3.632402931137966*^9, {3.6324031136989374`*^9, 3.6324032274964304`*^9}, {
   3.632403282308866*^9, 3.632403329294821*^9}, {3.6324033955328584`*^9, 
   3.632403440887416*^9}, 3.6324034803389688`*^9, {3.632403533876652*^9, 
   3.632403554857088*^9}, {3.632403611855315*^9, 3.6324036426068153`*^9}, {
   3.632403689341715*^9, 3.6324037756268053`*^9}, {3.632403808199375*^9, 
   3.632403870152463*^9}, {3.632403913058771*^9, 3.632403915590145*^9}, {
   3.6324039538780355`*^9, 3.6324039591595473`*^9}, {3.6324050312679005`*^9, 
   3.632405071123351*^9}, 3.6324051235600204`*^9, {3.6326047868545947`*^9, 
   3.6326048375986967`*^9}, {3.6326049566979847`*^9, 
   3.6326050000091352`*^9}, {3.632605031338952*^9, 3.632605039824172*^9}, {
   3.6632639834758863`*^9, 3.6632640002524023`*^9}, {3.6632640304109077`*^9, 
   3.663264030614039*^9}, {3.663264068076186*^9, 3.663264068419963*^9}, 
   3.663264103460621*^9, {3.663264147911064*^9, 3.6632641537069054`*^9}, 
   3.6632641867226334`*^9, {3.663264220767893*^9, 3.6632642339365187`*^9}, {
   3.6632642865060377`*^9, 3.6632643054646516`*^9}, {3.6632646378362293`*^9, 
   3.663264669057657*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 1}, 1, 20, 1}}, Typeset`size$$ = {
    1968., {123., 127.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$10006$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$10006$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Select[
          Flatten[
           Map[Line[{#, # - {1, 0}}]& , 
            Map[{#, 0}& , 
             Range[$CellContext`n$$]]]], FreeQ[#, {0, 
            Blank[]}]& ], 
         EdgeForm[Black], White, 
         Map[Disk[#, 0.2 (Max[5, $CellContext`n$$]/10)]& , 
          Map[{#, 0}& , 
           Range[$CellContext`n$$]]], 
         Map[Switch[Total[#] - $CellContext`n$$, 
           PatternTest[
            Blank[], Negative], {Black, 
            Text[
             Total[#], #]}, 0, {Red, 
            Text[
             Total[#], #]}, 
           PatternTest[
            Blank[], Positive], {White, 
            Text[
             Total[#], #]}]& , 
          Map[{#, 0}& , 
           Range[
            Max[20, $CellContext`n$$]]]], 
         Text[
          Style[
           StringJoin["Within ", 
            ToString[$CellContext`n$$ - 1], " steps: ", 
            ToString[
             Count[
              Map[Total[#]& , 
               Map[{#, 0}& , 
                Range[$CellContext`n$$]]], 
              PatternTest[
               Blank[], # <= $CellContext`n$$& ]]], " node", 
            If[$CellContext`n$$ > 1, "s", ""]], Large, Red], {
          1, 0.2 Max[5, $CellContext`n$$]}, {-1, 0}]}, 
        ImageSize -> {Automatic, 250}], 
      "Specifications" :> {{{$CellContext`n$$, 1}, 1, 20, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{2019., {172., 179.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6323905007150707`*^9, 3.6323905801840067`*^9, {3.632390627080057*^9, 
   3.63239063394491*^9}, 3.632390857714772*^9, 3.63239142054266*^9, {
   3.6323914622000976`*^9, 3.6323914788614407`*^9}, 3.632391634763745*^9, 
   3.6323916685743504`*^9, 3.6323922910420465`*^9, 3.632392347136629*^9, {
   3.63239238622052*^9, 3.6323924120015693`*^9}, 3.6323924554016647`*^9, 
   3.6323926001220446`*^9, 3.6323926426241226`*^9, 3.632392694811092*^9, 
   3.632401149745363*^9, 3.6324011919017*^9, 3.632401538682389*^9, 
   3.6324015795751143`*^9, 3.632401657822921*^9, 3.6324017490284142`*^9, 
   3.632401790041389*^9, 3.6324032484505787`*^9, 3.632403288199071*^9, {
   3.6324033262946744`*^9, 3.6324033300292387`*^9}, 3.63240344796588*^9, 
   3.6324034810108747`*^9, 3.632403568717133*^9, {3.632403631793792*^9, 
   3.6324036439037533`*^9}, {3.632403694076329*^9, 3.6324037344797573`*^9}, 
   3.6324037768768587`*^9, {3.632403809121295*^9, 3.6324038177623415`*^9}, {
   3.6324038501827364`*^9, 3.6324038723088107`*^9}, 3.6324039167151985`*^9, 
   3.63240396117527*^9, 3.6324041457651453`*^9, {3.6324050343583727`*^9, 
   3.6324050542318993`*^9}, {3.6324051069967103`*^9, 3.632405124935087*^9}, 
   3.632604841692667*^9, 3.6326050013529634`*^9, 3.632605041839904*^9, {
   3.663264008316499*^9, 3.663264036591491*^9}, 3.663264069920032*^9, 
   3.6632641632131763`*^9, {3.663264210017976*^9, 3.663264234749048*^9}, 
   3.6632643069490976`*^9, {3.663264641962844*^9, 3.6632646701497927`*^9}}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", "20"}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"Range", "[", "n", "]"}], "-", "1"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Accumulate", "[", 
  RowBox[{"Last", "/@", 
   RowBox[{"Tally", "[", "%", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Distances:\>\"", ",", "%%"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Tally (within n):\>\"", ",", "%"}], "}"}]}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6324022351369143`*^9, 3.632402298298625*^9}, {
  3.632402336404942*^9, 3.632402348903139*^9}, {3.632402414731488*^9, 
  3.6324025019660993`*^9}, {3.6324025393541384`*^9, 3.6324026007053547`*^9}, {
  3.632402649237547*^9, 3.632402746685315*^9}, {3.632402779576352*^9, 
  3.632402829544969*^9}, {3.632404017483365*^9, 3.632404071616845*^9}, {
  3.632605112394739*^9, 3.632605112519739*^9}, {3.6632645177641153`*^9, 
  3.663264524321594*^9}, {3.6632648536108522`*^9, 3.6632648812960424`*^9}, {
  3.6632649149879284`*^9, 3.663264917956822*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
   ",", "15", ",", "16", ",", "17", ",", "18", ",", "19"}], "}"}]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.632404028952668*^9, {
   3.6324040594182425`*^9, 3.632404072330058*^9}, {3.6326051137616596`*^9, 
   3.632605123430695*^9}, 3.663264527143137*^9, {3.663264864284417*^9, 
   3.663264883296116*^9}, 3.6632649186287365`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.632404028952668*^9, {
   3.6324040594182425`*^9, 3.632404072330058*^9}, {3.6326051137616596`*^9, 
   3.632605123430695*^9}, 3.663264527143137*^9, {3.663264864284417*^9, 
   3.663264883296116*^9}, 3.6632649186756144`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Distances:\"\>", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
       "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
       ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19"}], 
      "}"}]},
    {"\<\"Tally (within n):\"\>", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
       ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], 
      "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.632404028952668*^9, {
   3.6324040594182425`*^9, 3.632404072330058*^9}, {3.6326051137616596`*^9, 
   3.632605123430695*^9}, 3.663264527143137*^9, {3.663264864284417*^9, 
   3.663264883296116*^9}, 3.6632649187381177`*^9}]
}, {4}]],

Cell["Difference table:", "Text",
 CellChangeTimes->{{3.6324076136217422`*^9, 3.6324076235596943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<: \>\""}]}], "]"}],
         "&"}], " ", "@", " ", 
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20"}], "}"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "Green"}], 
        "}"}]}], "}"}]}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", "\"\<Subsection\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6324069874188795`*^9, 3.6324069904815226`*^9}, {
  3.632407059495476*^9, 3.6324070706522403`*^9}, {3.632407103183755*^9, 
  3.63240714105287*^9}, {3.632407193767522*^9, 3.632407304198489*^9}, {
  3.632407427450424*^9, 3.632407488001827*^9}, {3.6324075344960947`*^9, 
  3.632407567231269*^9}, {3.632408129826178*^9, 3.632408158619856*^9}, {
  3.6632649938690643`*^9, 3.663264997900508*^9}, {3.663265036032242*^9, 
  3.66326511800747*^9}, {3.6632651706086783`*^9, 3.6632651806058683`*^9}, {
  3.6632652230720434`*^9, 3.663265312948328*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"0: \"\>", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", 
      "12", "13", "14", "15", "16", "17", "18", "19", "20"},
     {"\<\"1: \"\>", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", ""}
    },
    AutoDelete->False,
    GridBoxBackground->{
     "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> RGBColor[1, 1, 0]}, 
      "ItemsIndexed" -> {{{-1, -1}, {1, 1}} -> RGBColor[0, 1, 0]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "Subsection",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.663264998868494*^9, 3.663265053691081*^9, {3.6632650940270925`*^9, 
   3.6632651189907885`*^9}, {3.6632651743213863`*^9, 3.6632651812778*^9}, {
   3.663265240054947*^9, 3.6632652610015306`*^9}, 3.663265313979602*^9}]
}, {2}]],

Cell["Row 1 is constant \[Rule] Dimension = 1", "Text",
 CellChangeTimes->{{3.6632654777901926`*^9, 3.6632655159048586`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"Black", ",", "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"#", "-", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{"#", ",", 
                 RowBox[{"#", "-", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
            "&"}], " ", "/@", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"n", "+", "2"}], "]"}], ",", "2"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"2", "<", 
                RowBox[{"Total", "[", "#", "]"}], "\[LessEqual]", 
                RowBox[{"n", "+", "2"}]}], "&&", 
               RowBox[{
                RowBox[{"Last", "[", "#", "]"}], "<", "5"}]}], "&"}]}], 
            "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"FreeQ", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "&"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "White", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Disk", "[", 
          RowBox[{"#", ",", ".15"}], "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"n", "+", "2"}], "]"}], ",", "2"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Total", "[", "#", "]"}], "\[LessEqual]", 
             RowBox[{"n", "+", "2"}]}], "&&", 
            RowBox[{
             RowBox[{"Last", "[", "#", "]"}], "<", "5"}]}], "&"}]}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Total", "[", 
             RowBox[{"#", "-", "1"}], "]"}], "-", "n"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"_", "?", "Negative"}], ",", 
           RowBox[{"{", 
            RowBox[{"Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"#", "-", "1"}], "]"}], ",", "#"}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", "0", ",", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"#", "-", "1"}], "]"}], ",", "#"}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"_", "?", "Positive"}], ",", 
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"#", "-", "1"}], "]"}], ",", "#"}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], "&"}], " ", "/@", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"Max", "[", 
              RowBox[{"5", ",", 
               RowBox[{"n", "+", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "[", "#", "]"}], "<", "5"}], "&"}]}], "]"}]}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\< steps: \>\"", "<>", 
            RowBox[{"ToString", "@", 
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Total", "[", 
                  RowBox[{"#", "-", "1"}], "]"}], "&"}], " ", "/@", " ", 
                RowBox[{"Select", "[", 
                 RowBox[{
                  RowBox[{"Tuples", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{"5", ",", 
                    RowBox[{"n", "+", "1"}]}], "]"}], "]"}], ",", "2"}], 
                   "]"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Last", "[", "#", "]"}], "<", "5"}], "&"}]}], 
                 "]"}]}], ",", "n"}], "]"}]}], "<>", "\"\< node\>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"n", ">", "1"}], ",", "\"\<s\>\"", ",", "\"\<\>\""}], 
             "]"}]}], ",", "Large", ",", "Red"}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1.2"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "250"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "5"}], "}"}], ",", "0", ",", "17", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6323477201532316`*^9, 3.632347803793461*^9}, {
   3.6323504432687664`*^9, 3.6323505175256767`*^9}, {3.6323505821236105`*^9, 
   3.6323506406691427`*^9}, {3.6323507077633677`*^9, 3.632350828613344*^9}, {
   3.6323509759798717`*^9, 3.6323509798238144`*^9}, {3.632351025839198*^9, 
   3.6323511326217337`*^9}, {3.632351355543482*^9, 3.632351368044112*^9}, {
   3.632390067730847*^9, 3.632390092215808*^9}, {3.632390174386894*^9, 
   3.6323901872777696`*^9}, {3.632390248955903*^9, 3.63239025705005*^9}, {
   3.6323903208300514`*^9, 3.632390446121704*^9}, {3.632390489620778*^9, 
   3.6323904995743904`*^9}, {3.6323905792777133`*^9, 
   3.6323906330283694`*^9}, {3.632390853175355*^9, 3.6323908566834726`*^9}, {
   3.6323911028866005`*^9, 3.6323911054648523`*^9}, {3.6323914094796195`*^9, 
   3.632391417698778*^9}, {3.632391460871908*^9, 3.6323914775801287`*^9}, {
   3.632391633654317*^9, 3.6323916338730717`*^9}, 3.632391666683631*^9, {
   3.6323922583770022`*^9, 3.6323922885106792`*^9}, {3.6323923424957747`*^9, 
   3.6323923460428257`*^9}, {3.6323923782470846`*^9, 3.632392411095281*^9}, {
   3.6323924502772303`*^9, 3.632392454524577*^9}, {3.632392559731563*^9, 
   3.6323926934203997`*^9}, {3.6324011465097675`*^9, 3.632401157166649*^9}, {
   3.6324013529557533`*^9, 3.6324013820904303`*^9}, {3.632401537682335*^9, 
   3.632401537869841*^9}, {3.6324015759397516`*^9, 3.6324016534172053`*^9}, {
   3.632401746191844*^9, 3.6324017482602434`*^9}, {3.6324017850903516`*^9, 
   3.6324017891583047`*^9}, {3.6324019039503536`*^9, 3.6324019041378636`*^9}, 
   3.632402931137966*^9, {3.632404443637122*^9, 3.632404514762629*^9}, {
   3.63240459293703*^9, 3.632404604575124*^9}, 3.6324046361547933`*^9, {
   3.632404684870908*^9, 3.6324048051051188`*^9}, {3.6324048648876038`*^9, 
   3.6324048748099623`*^9}, {3.632404905033893*^9, 3.632404906158944*^9}, {
   3.6324049799019117`*^9, 3.632405021128594*^9}, 3.632405456471328*^9, {
   3.6326052207460175`*^9, 3.6326052244649754`*^9}, {3.632605764854415*^9, 
   3.6326057665888863`*^9}, {3.632610350854788*^9, 3.6326103790594373`*^9}, {
   3.632610769528013*^9, 3.6326107829309006`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 17, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 5}, 0, 17, 1}}, Typeset`size$$ = {
    887., {123., 127.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$46223$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$46223$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Select[
          Flatten[
           Map[{
             Line[{#, # - {1, 0}}], 
             Line[{#, # - {0, 1}}]}& , 
            Select[
             Tuples[
              Range[$CellContext`n$$ + 2], 2], And[
              Inequality[2, Less, 
               Total[#], LessEqual, $CellContext`n$$ + 2], Last[#] < 5]& ]]], 
          FreeQ[#, 0]& ], 
         EdgeForm[Black], White, 
         Map[Disk[#, 0.15]& , 
          Select[
           Tuples[
            Range[$CellContext`n$$ + 2], 2], And[
           Total[#] <= $CellContext`n$$ + 2, Last[#] < 5]& ]], 
         Map[Switch[Total[# - 1] - $CellContext`n$$, 
           PatternTest[
            Blank[], Negative], {Black, 
            Text[
             Total[# - 1], #]}, 0, {Red, 
            Text[
             Total[# - 1], #]}, 
           PatternTest[
            Blank[], Positive], {White, 
            Text[
             Total[# - 1], #]}]& , 
          Select[
           Tuples[
            Range[
             Max[5, $CellContext`n$$ + 1]], 2], Last[#] < 5& ]], 
         Text[
          Style[
           StringJoin[
            ToString[$CellContext`n$$], " steps: ", 
            ToString[
             Count[
              Map[Total[# - 1]& , 
               Select[
                Tuples[
                 Range[
                  Max[5, $CellContext`n$$ + 1]], 2], Last[#] < 
                5& ]], $CellContext`n$$]], " node", 
            If[$CellContext`n$$ > 1, "s", ""]], Large, Red], 
          Scaled[{0, 1.2}], {-1, 0}]}, ImageSize -> {Automatic, 250}], 
      "Specifications" :> {{{$CellContext`n$$, 5}, 0, 17, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{938., {172., 179.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6323905007150707`*^9, 3.6323905801840067`*^9, {3.632390627080057*^9, 
   3.63239063394491*^9}, 3.632390857714772*^9, 3.63239142054266*^9, {
   3.6323914622000976`*^9, 3.6323914788614407`*^9}, 3.632391634763745*^9, 
   3.6323916685743504`*^9, 3.6323922910420465`*^9, 3.632392347136629*^9, {
   3.63239238622052*^9, 3.6323924120015693`*^9}, 3.6323924554016647`*^9, 
   3.6323926001220446`*^9, 3.6323926426241226`*^9, 3.632392694811092*^9, 
   3.632401149745363*^9, 3.6324011919017*^9, 3.632401538682389*^9, 
   3.6324015795751143`*^9, 3.632401657822921*^9, 3.6324017490284142`*^9, 
   3.632401790041389*^9, 3.632404339810315*^9, 3.632404421814389*^9, 
   3.632404516325204*^9, {3.632404607606522*^9, 3.632404636936079*^9}, {
   3.6324046873397717`*^9, 3.6324047101690173`*^9}, {3.632404746455516*^9, 
   3.632404805980159*^9}, 3.632404876247539*^9, 3.632404907065239*^9, 
   3.6324049940297923`*^9, 3.632405146232994*^9, 3.632405458346425*^9, 
   3.6326056390739293`*^9, 3.6326057681514673`*^9, 3.6326102911190996`*^9, {
   3.6326103532611732`*^9, 3.6326103925754433`*^9}, 3.6326106601352396`*^9, {
   3.632610770522971*^9, 3.632610794322136*^9}}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", "9"}], "}"}], ",", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     RowBox[{"Total", "/@", " ", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"Max", "[", 
            RowBox[{"5", ",", 
             RowBox[{"n", "+", "5"}]}], "]"}], "]"}], ",", "2"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", "#", "]"}], "<", 
           RowBox[{"n", " ", "+", "5"}]}], "&&", " ", 
          RowBox[{
           RowBox[{"Last", "[", "#", "]"}], "<", "5"}]}], "&"}]}], "]"}]}]}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Accumulate", "[", 
  RowBox[{"Last", "/@", 
   RowBox[{"Tally", "[", "%", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Distances:\>\"", ",", "%%"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Tally (within n):\>\"", ",", "%"}], "}"}]}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6324022351369143`*^9, 3.632402298298625*^9}, {
  3.632402336404942*^9, 3.632402348903139*^9}, {3.632402414731488*^9, 
  3.6324025019660993`*^9}, {3.6324025393541384`*^9, 3.6324026007053547`*^9}, {
  3.632402649237547*^9, 3.632402746685315*^9}, {3.632402779576352*^9, 
  3.632402829544969*^9}, {3.6324051976234136`*^9, 3.632405355012347*^9}, {
  3.6632656145957203`*^9, 3.663265623995781*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "4", ",", "4", ",", "4", ",", "4", ",", "5", ",", 
   "5", ",", "5", ",", "5", ",", "6", ",", "6", ",", "6", ",", "6", ",", "7", 
   ",", "7", ",", "7", ",", "7", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "9", ",", "9", ",", "9", ",", "9", ",", "10", ",", "10", ",", "10", ",", 
   "10", ",", "11", ",", "11", ",", "11", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.632405199185952*^9, {
   3.632405244214924*^9, 3.6324052868717127`*^9}, {3.6324053193263817`*^9, 
   3.6324053554811134`*^9}, 3.6632656250374007`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "14", ",", "18", ",", "22", ",", 
   "26", ",", "30", ",", "34", ",", "38", ",", "42"}], "}"}]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.632405199185952*^9, {
   3.632405244214924*^9, 3.6324052868717127`*^9}, {3.6324053193263817`*^9, 
   3.6324053554811134`*^9}, 3.6632656250907483`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Distances:\"\>", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
       "3", ",", "3", ",", "3", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
       "5", ",", "5", ",", "5", ",", "5", ",", "6", ",", "6", ",", "6", ",", 
       "6", ",", "7", ",", "7", ",", "7", ",", "7", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "9", ",", "9", ",", "9", ",", "9", ",", "10", ",", 
       "10", ",", "10", ",", "10", ",", "11", ",", "11", ",", "11", ",", 
       "11"}], "}"}]},
    {"\<\"Tally (within n):\"\>", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "3", ",", "6", ",", "10", ",", "14", ",", "18", ",", "22", 
       ",", "26", ",", "30", ",", "34", ",", "38", ",", "42"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.632405199185952*^9, {
   3.632405244214924*^9, 3.6324052868717127`*^9}, {3.6324053193263817`*^9, 
   3.6324053554811134`*^9}, 3.663265625153251*^9}]
}, {4}]],

Cell["Difference table:", "Text",
 CellChangeTimes->{{3.6324076136217422`*^9, 3.6324076235596943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<: \>\""}]}], "]"}],
         "&"}], " ", "@", " ", 
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "3", ",", "6", ",", "10", ",", "14", ",", "18", ",", "22",
            ",", "26", ",", "30", ",", "34", ",", "38", ",", "42"}], "}"}], 
         ",", "n"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "Green"}], 
        "}"}]}], "}"}]}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", "\"\<Subsection\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6324069874188795`*^9, 3.6324069904815226`*^9}, {
   3.632407059495476*^9, 3.6324070706522403`*^9}, {3.632407103183755*^9, 
   3.63240714105287*^9}, {3.632407193767522*^9, 3.632407304198489*^9}, {
   3.632407427450424*^9, 3.632407488001827*^9}, {3.6324075344960947`*^9, 
   3.632407567231269*^9}, {3.632408129826178*^9, 3.632408158619856*^9}, {
   3.6632649938690643`*^9, 3.663264997900508*^9}, {3.663265036032242*^9, 
   3.66326511800747*^9}, {3.6632651706086783`*^9, 3.6632651806058683`*^9}, {
   3.6632652230720434`*^9, 3.663265312948328*^9}, 3.6632656762687225`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"0: \"\>", "1", "3", "6", "10", "14", "18", "22", "26", "30", "34", 
      "38", "42"},
     {"\<\"1: \"\>", "2", "3", "4", "4", "4", "4", "4", "4", "4", "4", "4", ""}
    },
    AutoDelete->False,
    GridBoxBackground->{
     "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> RGBColor[1, 1, 0]}, 
      "ItemsIndexed" -> {{{-1, -1}, {1, 1}} -> RGBColor[0, 1, 0]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "Subsection",
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.663264998868494*^9, 3.663265053691081*^9, {3.6632650940270925`*^9, 
   3.6632651189907885`*^9}, {3.6632651743213863`*^9, 3.6632651812778*^9}, {
   3.663265240054947*^9, 3.6632652610015306`*^9}, 3.663265313979602*^9, 
   3.6632656808722954`*^9}]
}, {2}]],

Cell["\<\
Row 1 is constant (after some initial changes) \[Rule] Dimension = 1\
\>", "Text",
 CellChangeTimes->{{3.6632654777901926`*^9, 3.6632655159048586`*^9}, {
  3.6632656897194204`*^9, 3.6632657020691557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["2-d network:", "Subchapter",
 CellChangeTimes->{{3.6324029543735123`*^9, 3.6324029808062987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Black", ",", "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"#", "-", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"#", "-", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
           "&"}], " ", "/@", " ", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Tuples", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"n", "+", "2"}], "]"}], ",", "2"}], "]"}], ",", 
            RowBox[{
             RowBox[{"2", "<", 
              RowBox[{"Total", "[", "#", "]"}], "\[LessEqual]", 
              RowBox[{"n", "+", "2"}]}], "&"}]}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"FreeQ", "[", 
          RowBox[{"#", ",", "0"}], "]"}], "&"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "White", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Disk", "[", 
         RowBox[{"#", ",", 
          RowBox[{".2", " ", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"5", ",", "n"}], "]"}], "/", "10"}]}]}], "]"}], "&"}], 
       " ", "/@", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"n", "+", "2"}], "]"}], ",", "2"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", "#", "]"}], "\[LessEqual]", 
           RowBox[{"n", "+", "2"}]}], "&"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"#", "-", "1"}], "]"}], "-", "n"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"_", "?", "Negative"}], ",", 
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"#", "-", "1"}], "]"}], ",", "#"}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", "0", ",", 
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"#", "-", "1"}], "]"}], ",", "#"}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"_", "?", "Positive"}], ",", 
          RowBox[{"{", 
           RowBox[{"White", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"#", "-", "1"}], "]"}], ",", "#"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "&"}], " ", "/@", " ", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Max", "[", 
           RowBox[{"5", ",", 
            RowBox[{"n", "+", "1"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\< steps: \>\"", "<>",
            
           RowBox[{"ToString", "@", 
            RowBox[{"Count", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Total", "[", 
                 RowBox[{"#", "-", "1"}], "]"}], "&"}], " ", "/@", " ", 
               RowBox[{"Tuples", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{"Max", "[", 
                   RowBox[{"5", ",", 
                    RowBox[{"n", "+", "1"}]}], "]"}], "]"}], ",", "2"}], 
                "]"}]}], ",", "n"}], "]"}]}], "<>", "\"\< node\>\"", "<>", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"n", ">", "1"}], ",", "\"\<s\>\"", ",", "\"\<\>\""}], 
            "]"}]}], ",", "Large", ",", "Red"}], "]"}], ",", 
        RowBox[{".8", 
         RowBox[{"Max", "[", 
          RowBox[{"5", ",", 
           RowBox[{"n", "+", "1"}]}], "]"}], 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "5"}], "}"}], ",", "0", ",", "25", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6323477201532316`*^9, 3.632347803793461*^9}, {
   3.6323504432687664`*^9, 3.6323505175256767`*^9}, {3.6323505821236105`*^9, 
   3.6323506406691427`*^9}, {3.6323507077633677`*^9, 3.632350828613344*^9}, {
   3.6323509759798717`*^9, 3.6323509798238144`*^9}, {3.632351025839198*^9, 
   3.6323511326217337`*^9}, {3.632351355543482*^9, 3.632351368044112*^9}, {
   3.632390067730847*^9, 3.632390092215808*^9}, {3.632390174386894*^9, 
   3.6323901872777696`*^9}, {3.632390248955903*^9, 3.63239025705005*^9}, {
   3.6323903208300514`*^9, 3.632390446121704*^9}, {3.632390489620778*^9, 
   3.6323904995743904`*^9}, {3.6323905792777133`*^9, 
   3.6323906330283694`*^9}, {3.632390853175355*^9, 3.6323908566834726`*^9}, {
   3.6323911028866005`*^9, 3.6323911054648523`*^9}, {3.6323914094796195`*^9, 
   3.632391417698778*^9}, {3.632391460871908*^9, 3.6323914775801287`*^9}, {
   3.632391633654317*^9, 3.6323916338730717`*^9}, 3.632391666683631*^9, {
   3.6323922583770022`*^9, 3.6323922885106792`*^9}, {3.6323923424957747`*^9, 
   3.6323923460428257`*^9}, {3.6323923782470846`*^9, 3.632392411095281*^9}, {
   3.6323924502772303`*^9, 3.632392454524577*^9}, {3.632392559731563*^9, 
   3.6323926934203997`*^9}, {3.6324011465097675`*^9, 3.632401157166649*^9}, {
   3.6324013529557533`*^9, 3.6324013820904303`*^9}, {3.632401537682335*^9, 
   3.632401537869841*^9}, {3.6324015759397516`*^9, 3.6324016534172053`*^9}, {
   3.632401746191844*^9, 3.6324017482602434`*^9}, {3.6324017850903516`*^9, 
   3.6324017891583047`*^9}, {3.6324019039503536`*^9, 3.6324019041378636`*^9}, 
   3.632402931137966*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 5}, 0, 25, 1}}, Typeset`size$$ = {
    360., {178., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$46603$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$46603$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Select[
          Flatten[
           Map[{
             Line[{#, # - {1, 0}}], 
             Line[{#, # - {0, 1}}]}& , 
            Select[
             Tuples[
              Range[$CellContext`n$$ + 2], 2], Inequality[2, Less, 
              Total[#], LessEqual, $CellContext`n$$ + 2]& ]]], FreeQ[#, 0]& ], 
         EdgeForm[Black], White, 
         Map[Disk[#, 0.2 (Max[5, $CellContext`n$$]/10)]& , 
          Select[
           Tuples[
            Range[$CellContext`n$$ + 2], 2], 
           Total[#] <= $CellContext`n$$ + 2& ]], 
         Map[Switch[Total[# - 1] - $CellContext`n$$, 
           PatternTest[
            Blank[], Negative], {Black, 
            Text[
             Total[# - 1], #]}, 0, {Red, 
            Text[
             Total[# - 1], #]}, 
           PatternTest[
            Blank[], Positive], {White, 
            Text[
             Total[# - 1], #]}]& , 
          Tuples[
           Range[
            Max[5, $CellContext`n$$ + 1]], 2]], 
         Text[
          Style[
           StringJoin[
            ToString[$CellContext`n$$], " steps: ", 
            ToString[
             Count[
              Map[Total[# - 1]& , 
               Tuples[
                Range[
                 Max[5, $CellContext`n$$ + 1]], 2]], $CellContext`n$$]], 
            " node", 
            If[$CellContext`n$$ > 1, "s", ""]], Large, Red], (0.8 
           Max[5, $CellContext`n$$ + 1]) {1, 1}]}], 
      "Specifications" :> {{{$CellContext`n$$, 5}, 0, 25, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {226., 233.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6323905007150707`*^9, 3.6323905801840067`*^9, {3.632390627080057*^9, 
   3.63239063394491*^9}, 3.632390857714772*^9, 3.63239142054266*^9, {
   3.6323914622000976`*^9, 3.6323914788614407`*^9}, 3.632391634763745*^9, 
   3.6323916685743504`*^9, 3.6323922910420465`*^9, 3.632392347136629*^9, {
   3.63239238622052*^9, 3.6323924120015693`*^9}, 3.6323924554016647`*^9, 
   3.6323926001220446`*^9, 3.6323926426241226`*^9, 3.632392694811092*^9, 
   3.632401149745363*^9, 3.6324011919017*^9, 3.632401538682389*^9, 
   3.6324015795751143`*^9, 3.632401657822921*^9, 3.6324017490284142`*^9, 
   3.632401790041389*^9, 3.6326108119011993`*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", "6"}], "}"}], ",", 
   RowBox[{"Sort", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Total", "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"n", "+", "3"}], "]"}], ",", "2"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"#", "\[LessEqual]", 
        RowBox[{"n", "+", "2"}]}], "&"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Accumulate", "[", 
  RowBox[{"Last", "/@", 
   RowBox[{"Tally", "[", "%", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Distances:\>\"", ",", "%%"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Tally (within n):\>\"", ",", "%"}], "}"}]}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6324022351369143`*^9, 3.632402298298625*^9}, {
   3.632402336404942*^9, 3.632402348903139*^9}, {3.632402414731488*^9, 
   3.6324025019660993`*^9}, {3.6324025393541384`*^9, 
   3.6324026007053547`*^9}, {3.632402649237547*^9, 3.632402746685315*^9}, {
   3.632402779576352*^9, 3.632402829544969*^9}, 3.6632657438086433`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", "3", 
   ",", "3", ",", "3", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
   "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "7", ",", "7", ",", 
   "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.663265745714963*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45"}], "}"}]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.6632657457618337`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Distances:\"\>", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "3", ",", 
       "3", ",", "3", ",", "3", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
       "4", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
       "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
       "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
       "7", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "8"}], "}"}]},
    {"\<\"Tally (within n):\"\>", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", 
       ",", "36", ",", "45"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6324027276687603`*^9, 3.6324027473259645`*^9}, {
   3.6324027847927437`*^9, 3.6324028304355993`*^9}, 3.6632657458243427`*^9}]
}, {4}]],

Cell["Difference table:", "Text",
 CellChangeTimes->{{3.6324076136217422`*^9, 3.6324076235596943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<: \>\""}]}], "]"}],
         "&"}], " ", "@", " ", 
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28",
            ",", "36", ",", "45"}], "}"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "Green"}], 
        "}"}]}], "}"}]}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", "\"\<Subsection\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6324069874188795`*^9, 3.6324069904815226`*^9}, {
   3.632407059495476*^9, 3.6324070706522403`*^9}, {3.632407103183755*^9, 
   3.63240714105287*^9}, {3.632407193767522*^9, 3.632407304198489*^9}, {
   3.632407427450424*^9, 3.632407488001827*^9}, {3.6324075344960947`*^9, 
   3.632407567231269*^9}, {3.632408129826178*^9, 3.632408158619856*^9}, {
   3.6632649938690643`*^9, 3.663264997900508*^9}, {3.663265036032242*^9, 
   3.66326511800747*^9}, {3.6632651706086783`*^9, 3.6632651806058683`*^9}, {
   3.6632652230720434`*^9, 3.663265312948328*^9}, 3.6632656762687225`*^9, {
   3.6632657689655447`*^9, 3.6632657782537746`*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"0: \"\>", "1", "3", "6", "10", "15", "21", "28", "36", "45"},
     {"\<\"1: \"\>", "2", "3", "4", "5", "6", "7", "8", "9", ""},
     {"\<\"2: \"\>", "1", "1", "1", "1", "1", "1", "1", "", ""}
    },
    AutoDelete->False,
    GridBoxBackground->{
     "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> RGBColor[1, 1, 0]}, 
      "ItemsIndexed" -> {{{-1, -1}, {1, 1}} -> RGBColor[0, 1, 0]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "Subsection",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.6632657703222523`*^9, 3.6632657792381954`*^9}}]
}, {2}]],

Cell["Row 2 is constant \[Rule] Dimension = 2", "Text",
 CellChangeTimes->{{3.632392739340064*^9, 3.632392774432838*^9}, {
  3.632407921199445*^9, 3.632407921996357*^9}, {3.663265795670743*^9, 
  3.6632658079992733`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3-d network:", "Subchapter",
 CellChangeTimes->{{3.6324029543735123`*^9, 3.632403001557906*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"Black", ",", "\[IndentingNewLine]", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], "}"}], 
                  "]"}], ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "}"}], 
                  "]"}], ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}], 
                  "]"}]}], "}"}], "&"}], " ", "/@", " ", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Tuples", "[", 
                 RowBox[{
                  RowBox[{"Range", "[", 
                   RowBox[{"n", "+", "2"}], "]"}], ",", "3"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"3", "<", 
                  RowBox[{"Total", "[", "#", "]"}], "\[LessEqual]", 
                  RowBox[{"n", "+", "3"}]}], "&"}]}], "]"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"FreeQ", "[", 
              RowBox[{"#", ",", "0"}], "]"}], "&"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Switch", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Total", "[", 
                RowBox[{"#", "-", "1"}], "]"}], "-", "n"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"_", "?", "Negative"}], ",", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "Larger"}], "]"}], "&"}], " ", "@", " ", 
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "Larger"}], "]"}]}], "&"}], " ", "@", 
                   " ", 
                   RowBox[{"Total", "[", 
                    RowBox[{"#", "-", "1"}], "]"}]}], ",", "#"}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", "0", ",", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "Larger"}], "]"}], "&"}], " ", "@", " ", 
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "Larger"}], "]"}]}], "&"}], " ", "@", 
                   " ", 
                   RowBox[{"Total", "[", 
                    RowBox[{"#", "-", "1"}], "]"}]}], ",", "#"}], "]"}]}], 
               "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"_", "?", "Positive"}], ",", 
              RowBox[{"{", 
               RowBox[{"White", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Total", "[", 
                   RowBox[{"#", "-", "1"}], "]"}], ",", "#"}], "]"}]}], 
               "}"}]}], "\[IndentingNewLine]", "]"}], "&"}], " ", "/@", " ", 
           RowBox[{"Tuples", "[", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"4", ",", 
                RowBox[{"n", "+", "1"}]}], "]"}], "]"}], ",", "3"}], 
            "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\< steps: \>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"Count", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"#", "-", "1"}], "]"}], "&"}], " ", "/@", " ", 
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"Max", "[", 
                 RowBox[{"4", ",", 
                  RowBox[{"n", "+", "1"}]}], "]"}], "]"}], ",", "3"}], 
              "]"}]}], ",", "n"}], "]"}]}], "<>", "\"\< node\>\"", "<>", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", ">", "0"}], ",", "\"\<s\>\"", ",", "\"\<\>\""}], 
          "]"}]}], ",", "Large", ",", "Red", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "3"}], "}"}], ",", "0", ",", "10", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6323477201532316`*^9, 3.632347803793461*^9}, {
   3.6323504432687664`*^9, 3.6323505175256767`*^9}, {3.6323505821236105`*^9, 
   3.6323506406691427`*^9}, {3.6323507077633677`*^9, 3.632350828613344*^9}, {
   3.6323509759798717`*^9, 3.6323509798238144`*^9}, {3.632351025839198*^9, 
   3.6323511326217337`*^9}, {3.632351355543482*^9, 3.632351368044112*^9}, {
   3.632390067730847*^9, 3.632390092215808*^9}, {3.632390174386894*^9, 
   3.6323901872777696`*^9}, {3.632390248955903*^9, 3.63239025705005*^9}, {
   3.6323903208300514`*^9, 3.632390446121704*^9}, {3.632390489620778*^9, 
   3.6323904995743904`*^9}, {3.6323905792777133`*^9, 
   3.6323906330283694`*^9}, {3.632390853175355*^9, 3.6323908566834726`*^9}, {
   3.6323911028866005`*^9, 3.6323911054648523`*^9}, {3.6323914094796195`*^9, 
   3.632391417698778*^9}, {3.632391460871908*^9, 3.6323914775801287`*^9}, {
   3.632391633654317*^9, 3.6323916338730717`*^9}, 3.632391666683631*^9, {
   3.6323922583770022`*^9, 3.6323922885106792`*^9}, {3.6323923424957747`*^9, 
   3.6323923460428257`*^9}, {3.6323923782470846`*^9, 3.632392411095281*^9}, {
   3.6323924502772303`*^9, 3.632392454524577*^9}, {3.632392559731563*^9, 
   3.6323926934203997`*^9}, {3.6324011465097675`*^9, 3.632401157166649*^9}, {
   3.6324013529557533`*^9, 3.6324013820904303`*^9}, {3.632401537682335*^9, 
   3.632401537869841*^9}, {3.6324015759397516`*^9, 3.6324016534172053`*^9}, {
   3.632401746191844*^9, 3.6324017482602434`*^9}, {3.6324017850903516`*^9, 
   3.6324017891583047`*^9}, {3.6324019039503536`*^9, 3.6324019041378636`*^9}, 
   3.632402931137966*^9, {3.6324057645494313`*^9, 3.63240585857336*^9}, 
   3.632405890981186*^9, {3.632406015443473*^9, 3.6324061626263504`*^9}, {
   3.6324062509931617`*^9, 3.6324062518213196`*^9}, 3.632406330780012*^9, {
   3.632406363883745*^9, 3.632406528170432*^9}, {3.632408269362157*^9, 
   3.6324083195125065`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 3}, 0, 10, 1}}, Typeset`size$$ = {
    360., {205.5, 212.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$47832$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$47832$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Column[{
         Graphics3D[{Black, 
           Select[
            Flatten[
             Map[{
               Line[{#, # - {1, 0, 0}}], 
               Line[{#, # - {0, 1, 0}}], 
               Line[{#, # - {0, 0, 1}}]}& , 
              Select[
               Tuples[
                Range[$CellContext`n$$ + 2], 3], Inequality[3, Less, 
                Total[#], LessEqual, $CellContext`n$$ + 3]& ]]], 
            FreeQ[#, 0]& ], 
           Map[Switch[Total[# - 1] - $CellContext`n$$, 
             PatternTest[
              Blank[], Negative], {Black, 
              Text[
               ((Style[#, Larger]& )[
                Style[#, Larger]]& )[
                Total[# - 1]], #]}, 0, {Red, 
              Text[
               ((Style[#, Larger]& )[
                Style[#, Larger]]& )[
                Total[# - 1]], #]}, 
             PatternTest[
              Blank[], Positive], {White, 
              Text[
               Total[# - 1], #]}]& , 
            Tuples[
             Range[
              Max[4, $CellContext`n$$ + 1]], 3]]}, ImageSize -> Medium], 
         Style[
          StringJoin[
           ToString[$CellContext`n$$], " steps: ", 
           ToString[
            Count[
             Map[Total[# - 1]& , 
              Tuples[
               Range[
                Max[4, $CellContext`n$$ + 1]], 3]], $CellContext`n$$]], 
           " node", 
           If[$CellContext`n$$ > 0, "s", ""]], Large, Red, FontFamily -> 
          "Times"]}], 
      "Specifications" :> {{{$CellContext`n$$, 3}, 0, 10, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {256., 263.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6323905007150707`*^9, 3.6323905801840067`*^9, {3.632390627080057*^9, 
   3.63239063394491*^9}, 3.632390857714772*^9, 3.63239142054266*^9, {
   3.6323914622000976`*^9, 3.6323914788614407`*^9}, 3.632391634763745*^9, 
   3.6323916685743504`*^9, 3.6323922910420465`*^9, 3.632392347136629*^9, {
   3.63239238622052*^9, 3.6323924120015693`*^9}, 3.6323924554016647`*^9, 
   3.6323926001220446`*^9, 3.6323926426241226`*^9, 3.632392694811092*^9, 
   3.632401149745363*^9, 3.6324011919017*^9, 3.632401538682389*^9, 
   3.6324015795751143`*^9, 3.632401657822921*^9, 3.6324017490284142`*^9, 
   3.632401790041389*^9, 3.632405902653637*^9, 3.6324060755030003`*^9, {
   3.6324061084020824`*^9, 3.632406145393151*^9}, 3.6324063317800245`*^9, {
   3.6324063785719533`*^9, 3.6324063863379574`*^9}, 3.6324064181196136`*^9, {
   3.632406455027673*^9, 3.6324064694033766`*^9}, {3.6324065067162666`*^9, 
   3.632406533123806*^9}, {3.6324082888750105`*^9, 3.632408320387544*^9}, 
   3.6324084099406347`*^9, 3.632610830215514*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", "10"}], "}"}], ",", 
   RowBox[{"Sort", "@", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], "+", 
       RowBox[{"Total", "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"n", "+", "3"}], "]"}], ",", "3"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"#", "\[LessEqual]", "n"}], "&"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Accumulate", "[", 
  RowBox[{"Last", "/@", 
   RowBox[{"Tally", "[", "%", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Distances:\>\"", ",", "%%"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Tally (within n):\>\"", ",", "%"}], "}"}]}], "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6324022351369143`*^9, 3.632402298298625*^9}, {
   3.632402336404942*^9, 3.632402348903139*^9}, {3.632402414731488*^9, 
   3.6324025019660993`*^9}, {3.6324025393541384`*^9, 
   3.6324026007053547`*^9}, {3.632402649237547*^9, 3.632402746685315*^9}, {
   3.632402779576352*^9, 3.632402829544969*^9}, {3.6324066056215167`*^9, 
   3.6324066622885637`*^9}, {3.6324067652826195`*^9, 
   3.6324067653451223`*^9}, {3.6324068305802135`*^9, 3.632406841821277*^9}, 
   3.6632658304318175`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", 
   ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
   "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "4", ",", "4", ",", "4", 
   ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
   "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "5", ",", "5", ",", "5", 
   ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
   "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", 
   ",", "5", ",", "5", ",", "5", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
   "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
   "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", 
   ",", "6", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
   "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", 
   ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
   "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", 
   ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
   "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", 
   ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
   "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", 
   ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
   "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", 
   ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
   "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", 
   ",", "9", ",", "9", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
   ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
   "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
   ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
   "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
   ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
   "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
   ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
   "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", 
   ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
   "10", ",", "10", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6632658469484596`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "10", ",", "20", ",", "35", ",", "56", ",", "84", ",", 
   "120", ",", "165", ",", "220", ",", "286"}], "}"}]], "Output",
 CellChangeTimes->{3.663265847010955*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Distances:\"\>", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "2", ",", 
       "2", ",", "2", ",", "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", 
       "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "4", ",", 
       "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
       "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
       "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
       "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
       "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", 
       "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
       "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
       "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
       "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", "6", ",", 
       "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
       "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
       "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
       "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
       "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", "7", ",", 
       "7", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
       "8", ",", "8", ",", "8", ",", "8", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", "9", ",", 
       "9", ",", "9", ",", "9", ",", "10", ",", "10", ",", "10", ",", "10", 
       ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
       "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10",
        ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",",
        "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
       "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10",
        ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",",
        "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", 
       "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10",
        ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",",
        "10", ",", "10", ",", "10", ",", "10", ",", "10"}], "}"}]},
    {"\<\"Tally (within n):\"\>", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "4", ",", "10", ",", "20", ",", "35", ",", "56", ",", "84", 
       ",", "120", ",", "165", ",", "220", ",", "286"}], "}"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6632658471047115`*^9}]
}, {4}]],

Cell["Difference table:", "Text",
 CellChangeTimes->{{3.6324076136217422`*^9, 3.6324076235596943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<: \>\""}]}], "]"}],
         "&"}], " ", "@", " ", 
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "4", ",", "10", ",", "20", ",", "35", ",", "56", ",", 
           "84", ",", "120", ",", "165", ",", "220", ",", "286"}], "}"}], ",",
          "n"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "Green"}], 
        "}"}]}], "}"}]}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", "\"\<Subsection\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.6324069874188795`*^9, 3.6324069904815226`*^9}, {
   3.632407059495476*^9, 3.6324070706522403`*^9}, {3.632407103183755*^9, 
   3.63240714105287*^9}, {3.632407193767522*^9, 3.632407304198489*^9}, {
   3.632407427450424*^9, 3.632407488001827*^9}, {3.6324075344960947`*^9, 
   3.632407567231269*^9}, {3.632408129826178*^9, 3.632408158619856*^9}, {
   3.6632649938690643`*^9, 3.663264997900508*^9}, {3.663265036032242*^9, 
   3.66326511800747*^9}, {3.6632651706086783`*^9, 3.6632651806058683`*^9}, {
   3.6632652230720434`*^9, 3.663265312948328*^9}, 3.6632656762687225`*^9, {
   3.6632657689655447`*^9, 3.6632657782537746`*^9}, {3.6632658908432016`*^9, 
   3.663265912460881*^9}}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"0: \"\>", "1", "4", "10", "20", "35", "56", "84", "120", "165", 
      "220", "286"},
     {"\<\"1: \"\>", "3", "6", "10", "15", "21", "28", "36", "45", "55", "66",
       ""},
     {"\<\"2: \"\>", "3", "4", "5", "6", "7", "8", "9", "10", "11", "", ""},
     {"\<\"3: \"\>", "1", "1", "1", "1", "1", "1", "1", "1", "", "", ""}
    },
    AutoDelete->False,
    GridBoxBackground->{
     "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> RGBColor[1, 1, 0]}, 
      "ItemsIndexed" -> {{{-1, -1}, {1, 1}} -> RGBColor[0, 1, 0]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "Subsection",
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.6632657703222523`*^9, 3.6632657792381954`*^9}, {
  3.663265893945148*^9, 3.663265913023385*^9}}]
}, {2}]],

Cell["Row 3 is constant \[Rule] Dimension = 3", "Text",
 CellChangeTimes->{{3.632392739340064*^9, 3.632392774432838*^9}, {
  3.632407921199445*^9, 3.632407921996357*^9}, {3.663265795670743*^9, 
  3.6632658079992733`*^9}, {3.663265917945487*^9, 3.663265920986747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["A 3-d network from a SSS", "Subchapter",
 CellChangeTimes->{{3.6632782149451046`*^9, 3.66327822548203*^9}}],

Cell["The network shown first in the PowerPoint:", "Text",
 CellChangeTimes->{{3.663278233294906*^9, 3.6632782778930807`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QecXNWVJ35t/O9qg3Y1+mtZBha0JNuAsTHGYAwYYxxwYAYPxjY2tsGA
8ThiAwYDJucoECIKhEhCJImMyDnnjAgi5yRyqLf3e+u9plRUVVcrd/f5zedO
o+5Kr/zu/Z3wO+eM2uQP62/+b4cMGfLn/5T+3/q/3Hatrbb65XY/+PfpH1/b
7i+bbfLv0n/8/t8MGfJeWn45J1AUxb+JFStWrFixYs25NYcoem7z+r+NFStW
rFixYrVcCxTfd/gMvV3Hv4sVK1asWLFi5TVL3D+Pub0bHv/3sWLFihUrVqyW
qxv+n2tc3+q1i/a83vi5/0PT+o+xYsWKFStWrLyaObId7881rm/xeq24vZnT
e66hVqv9f1b67//UaqW//edYsWLFihVrIK8OHFhxZCvub+b7tlw/h/m9Fbf3
cHojf6efQ6uV/v1fGlf63X+NFStWrFixBsNqwYGN/NhjBzRxfieun2Web35u
0ZrfM7dXvN5grwytODz9/G/l+u9W+t2whvU/YsWKFStWrEGyeviv4sSKI4vS
BihKvq84v4HvK66fbZ5vfk4xM7+35PbiYz/9vzVwuWv6n+nfw9P6Byv9e0S1
0r///1ixYsWKFWswrCb++4dyDceTlQ1Q+5j3e/i+A9fPEs93y++1j2Px2V+v
eL32Mae7rpFp/a/0+4XSz/+d1sIN6x+b1iKxYsWKFSvWAFnNHNfIf/+75MX/
VavzJL6sOL/i++zfN/j2XfH8nOL3Wum3l9z+P2sf87rPXPG561w0rcWs9LjF
089R6ef/tdJ/LxErVqxYsWIN5NXAeaNKHlysXPgRT2ber9X5M/N96d9nrq/V
+Xa2eL4bfi8+zrt7v//e4LdX3F7xus8+qry+pdJaOq1l0vp0uT6T1rLlWi5W
rFixYsUaoKviOrxXcSA+xIv4EU/iS7xZ8X3F9cNLnhXDzzxf1LV5feb5Fhzf
qK9rjM//11qd3/9nmVeouH3R0j7xeZdO//2p8rqWT2uF9O/PpZ8rpp9fSD9X
KtcXy7VyrFixYsWKNcBWxXGZ80r+W7HkwxVqdX5ctuRLnL9EyaP8+8z1ZQ5f
rPy/l/zb6M836/BacnxvPnxt5vh8D7+X+QR5BvbHEuVnZKt8Nq3Pl9flOldN
68vp8V9JP9dIa00r/fur6edaLdbXYsWKFStWrH62PsFnJc+tWa41Sh78cq3O
i/gRT+JLvIk/M9fX6rz6j3i2kedrM8ftu/Ll2/jwjTn4xvx7I78vUtoc4g2f
Lj/jiuXndg1rlNe5dlrfSOtbaX07rXXT+k5a303re+X6fqxYsWLFijVAVsVt
eA7f4T38hwfxIV7Ej2vU6nyJN/HnZ2t1Pl2q5NdFmni+Jz/fJmbfF47/j2Xs
n67vv5V5gX+o+L1WzyGwOZYtYw9iEvz1r6b19fJaXN96af1zWv+S1g/T2jCt
H6X147R+Uq6NGtZPY8WKFStWrH62Gnms4jY8h+/wHv7Dg/gQL+LHb+HL0t/H
9V8s+VSuG7/i2UVK3v2Hkofx8dCG3Hy3HF/5+jPF6KscfK2urxtZq8cPFi/f
n6aA7bFKrR6HwO1sFXbMD8rrcr0bp/XLtDZNa7P0uM3Tzy3S+nW5tmxYv4kV
K1asWLH62WrksYrbtij5brNanf/w4Ma1Oi/iRzyJL79d8ucatTqf4lX8unTJ
t/Li+BcPN+fmK19+pnh9G47v5MPT+dH3yxOIzy9bfo5VSxtE/OF75Wdmu/y8
vCbX+a9p/T6tP6W1VVp/SWvrtLZJa1srvcZfY8WKFStWrP68Kk4r+W3rku+2
Kvnv9yUf/rrkx5+XfPmDkj+/UdT5dNWSX5ct+Xaxkn/10+nKl2/jw3tMY62c
fjtq9NS/09DT+9EDyBd8vrQ3aAm+WavHHn5Y2ii/Ku2aP7q+8rp3SGuntHZJ
a9e0dk9rj3Lt2bD2ihUrVqxYsfrZauSxitvwHL7DezultUPJh3gfP+JJfLlx
rc6fePSbtTqv4lc8i2/xLv7Fw/9Q8vJ/KWaupWvb/67oEKcvPvbhFy7qMYNl
anVdAI3AGrW6/+5ziTuwSdgnf6jVbZgdymtzrfuktX9aB6Z1cFqj0zo0rcPK
NSZWrFixYsXq56viNPyG5/Ad3sN/eBAf4kX8iCfxJd7En3gUn+LVNWp1nsW3
y5T8q6Yu+/JFF/H6oos4fe3jPPwitbot8ZlaPYawWlHPH4gvbJj++xe1eh5C
PGK78hrYNgeU13l4WkemdUxa49Ljj08/x6d1QrkmxIoVK1asWP18VZw2vuS5
cbU67+E/PIgP8SJ+xJP4Em9uWfIonv9eya+r1ep8i3eXqNV5uMrLd6W9a8fx
tYY4fVHX9FV5+OzDlzmDdWv1PMLGtbqGzuf8W1q7pbVfeS2u69jymk9Oa2Ja
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
+BFP4ku8iT/x6F4lr/YXjp9Wq/f5UyNId1Dl4t+rzczvGUWgV7z+1FPFuZts
Usx4+un878u326544Z57PvG4Ry+8qLjpwIOK92bM+MTf7pl2ZfGnf92yWH7E
8GLIkCHF0HUWLlb/1TeKPXberXj+mefn+jUEAoHAQEIT11c8/17JdzNK/nuh
5MNpwfGBdnjz2WeL/UeMLK7ba+/i6p13LiZv9NPinI1/Xjxz0009j7lv4sTi
zB9uWEz6/nrFJX/aqnjt0cd6/nbjDVcX39ls5WLIMkOKIVuntVxaf0/rqrT2
GlL8dJeNiycefWLeX1ggEAj0UwTHB8fPMaSv6djlVygOWmjh7MO/kfz6+ydN
Kqb+4Y/FnceOK27Yd7/iwi23LB44/fTi2ZtvKa7Zbbfiot/+rrg+2QSX77J7
sd5aqxZD9k98flta/m+dtI4t/7uo8/7+o/cvZrz2Sf8/EAgEAp9EcHxw/JxC
7aOPinFfWKnYYciQYtq55+bfvXT//cVxK32x2GPosOLghRcpnrj66p7Hf/Du
uzm2v1f62y/Sc4avmXj8gwZOXy2tsQ3/vmVIscLvVyruuP6O+XWJgUAg0K8Q
HB8cP6dQ+/DDYtL3vl+MXWLJ4qSvrlWc/ZONiot//4fs2x/72c8VoxdZrLg+
+fIfvf9+z3Mu/M2/Fnsmfl9r2NBiyMENfN6K49P/Df350GLKCZPn41UGAoFA
/0FwfHD8nAI//rxfblKcsOpqxc6Jtyfj+N/9vjj1W98unrjiipynHzNqieLm
Qw913xVPXHllce4vflmM/8znig1XWrEYcvTQXjl+yMZDirPGnzm/LzUQCAT6
BYLjg+PnFPjxE1Zbvdhr+PBi3+EjimduvDHz/HV77FF89MEHOTY/9Y9/Ko5c
cuninpNOLk5ff/2swbtq278WO671jWKhzUcWQ97vwPGPDSkW/81SxXWXXDe/
LzUQCAT6BYLjg+PnFPjxYxYfVWyTfPhxn/9CcfPo0cURSyxdPH399T2PocM7
b5NNi7GjliymbPTT4r033ihuO/zw4rQf/axY6bOLFUOmNnH8kQ3/3nVIse1e
fy1eeeGV+XiVgUAg0H8QHB8cPych577/QgsXJ3xl9eL0f1o/5+Ub6+OADu+A
ESOL8St/qZjx7LPFvSefUkzdZLNix5VXKxZef0Qx5MLE52+WHH9QWq+ndfiQ
Yp0/fqt4/N7HWr1tIBAIBFogOD44fk7h0YsuLg5O/H7t7rsXx624UnHAyIWK
K3fcsfigqdfNyw8+WJzy9W/knP2Un/6suH7vfbItcO76GxR/X/lrxSobLV8M
3XZ4MWRYnedHbLdwsdnWmxUP3/7QfLqyQCAQ6J8Ijg+OnxN44+mns99+6KKL
Fc/dcUdxweZbFLs11NA14tbDD8/9b67cYYfikIUXyXF9zztm2eWKB486urhl
6mXFuKPGFzv8bYdiz133LE478bTinTfeng9XFQgEAv0bwfHB8bOLN59/vpia
OPvqXXfNmno6u6M+vWzm+Keu+6Q+Tk2dXH3t/fez1n6/ESOKv6bHytO/89pr
8+EKAoFAYGAiOD44fnYx/Yorcu+bF++5J/vkVQz+uBU+n3XzH334Yc9jP3rv
vRzHf2hyvcb93ddfL45Lz9lv0UWLF+69d35dQiAQCAxIBMcHx88unrzqquLk
r30996bdZ/iIYsziSxTP3Xpb9tGv2WWX4u2XXup57PN33lmcsvY6xTM339Lz
uwmrr5mf+/7bEY8PBAKBOYng+OD42cWLyf/Wx+7AhRbO/rx8u9j9VX//e/bn
G3X19Hhq5l577PH879cfn545/smGHreBQCAQmDMIjg+On1289sQTxWGLLl7s
MmRIce8pp+bfmUEz/kurFKMXXSzbAKCH7YlrrJnnyr7/1lv5d7eMGZN74TXX
1wUCgUBg9hEcHxw/u3jhzjuLA0culGPw77zyas/vT1rzq8XuQ4fmnrVw13HH
F+f8bOOswa9w2ve+n/1+efpAIBAIzFkExwfHzw6evemmzNvmyt09/oSZ/kZv
d+hii2cN/ZvPPZdr4qedd17P3/1u/CpfLh675JJ5/bEDgUBgUCA4Pjh+VvD8
XXflGXIXbr5FfT7ssGHFad/5bvHWCy/0PIZm/ujPLJd9dfPnLt9m25n+ftfx
44vzf7VZ8crDD8+PSwgEAoEBj+D44Pi+Qjx+0ne/V0z6/nrFA6efnufNjF50
8dyrjpa+Me5uBo2/6U9vRk0j6PHk5j948815fQmBQCAwKBAcHxzfF/gqbj/6
6Dwnvsq9f/D22zkmP/3KK7Nm/uaDD+nh+QfPPLPYZ/jwYmry4xu5/L0ZM4rj
V1q5eOT8C+bLdQQCgcBgQHB8cHwrmBXz+hNPfOL3at1P/ca3iqdvvKnnd+bN
4fjXpk/PcXcx+6euv7549uZbijPX/0Gxx9Chn+hpO+2cc4qzf/yT3DcnEAgE
AnMHwfHB8c1468UXiwt/86/FBZttnnvT3JH89kcuvCjn4G864MDilHW+WTx7
y63FKw89lDn9hbvvLg5eeJGcX3/8ssty3/qJ31435+Jp648YtWTx4FlnZVug
wnm/+GVx/T77Zn8+EAgEAnMHwfGDj+PF0e+fNKllL3n94s2BM1Pmiu3/ln1t
nD45/Txvs82K/UaMLA5bbFSeH3PMcp8tjll+hdz/ZtchQ4rRiyxaHDByZF67
DhlaHLjQQsWL991XXPDrXxe3jhlTfPDOO/k93nvzzeL4lb5YPDxlyry+9EAg
EBhUCI4f+Bz/1nPPFbcdcUTuM+NS1LjpLTf5pz8rbthv/5xH50/rS3PLYYcV
V+2wY+5XU4H/zW9X+7bnsGGZ209aa+2edWLy1c2PM4/mwi23LK7Zddfi2j32
zI9/KXG8GXM37n9ATz5e3P6sDX/U0xsnEAgEAnMHwfEDn+P1jT312+vmPDl+
v2zrbYrnb78jz3vnY6ttu+h3v8/8fHLi7KrPbCPkzcXd8Xkr//va3XbLmvqi
IR5/4Ra/zvF4HC/m//bLL+ffn7/pr4ob9t2veDfi9IFAIDBXERw/8DkeXnrg
geyD60c3/fLL8+/efOGFXPs24ctfyfXt/jZ6kcWKKT/bOOfW2QFmxomx4+Vb
k4+vJv78zTb/xAxYs+dOXeebM/Wk5cPz5T3+sm22Ld545pkcK+Dvh54+EAgE
5j6C4wcHx7/1/PPFxHW/Uxy22OLZX3/6hhuKyYnL9ZjHuTfsf0Ax7YILizM3
/FHOteP8MYuPKq7caaess5u80U9zHp+e/sgllireeOqpmV5fv5tjl1+heOKq
q2b6/bmbbprz+eds/PP8HNxuvvzLyeYIBAKBwNxFcPzA53h++D0nnVyc+YMN
iql/+GMxJvG8+a+HLrpY9r2rGHoFvWqu3nnnnLM/ZJFFix2SHXDxb3+X6+m8
1rHLLZ/r4hqhDw4dvtr4DxpmxNL1jR21RJ5HN+Ppp7OW76aDDs66u0AgEAjM
XQTHD3yOx+Hn/uKX2TeXUz9yyaWzBn7CGl8tbhs7tv0T02XLpdPO08jzxc2X
uSjx/W1HHll88O67Hz80rYcmTy7OWH/9mfL5tfffL45a5tPZVnjymmuKk9b+
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
L892wEsPPNDzO7r8i373+5gtGwgE5ikc35f9Zes8H0te8rnke5ifLf/49ksv
5fMNv/Nx9k8/xTPpinG9OmJztiu88fTTufa4PyE4PjjePYvLdx0yJOvq3n/r
rZ6/ydk/efXVxcTvfDfHs45bsT4D/oEzzijO++Umn4jZ+6rU1auHf7OcKQ8P
nDYpx8ZebuqbFwgEAnMT5mjid7H3Vj4GX8bfnkjn3LV77pX9ffF7szLN6dK7
m11gjU//nn7FFfP+ImYDwfHB8cDnNlP+0HRvq6P7xN/vv7/YZ/iIbOtevcsu
OZZ1TuJsefuPkk1cgX518k9/Vtw6duxMujw2Aa1ecHwgEJhX4GecuOZXs7bO
mdUKVb3vjfsfkGdt3HvyKTm2ecVftyuOXGqZfC7KPZrjddG//ranH1h/QXB8
cDy88/rruXfNgSNG5ty5/HtjfdwDZ56ZfXzcrc7d/Pgrttu+OOYzyxXP3XZ7
z+PE+I/+1LKfsHUfOP308OMDgcA8w3uvvZ7jiWrkaIk7cfOL992XZ2bq8f30
DTfkuR5ilOqM9PrcbciQ7N848567886co+8vtBAcHxyfkS7xyXQ/2w9nbbBh
cd8pp+Ya9xlPPZXvZbzOjn05+fv8cxoWfvno5Pef8S8b9MySx/d0+o25eFBP
Z77syw8+OD+uLhAIDCKYm3HTwYcU41ZYMffzNA+rVf86PokZHGqIDlp4kTxX
+4glls69PWnrJ6y+Zo7dH7nk0rlfjh4f4vpn/WCDnKd/+5VXF3iuD44Pjq+g
Ll4earehQ7NmDoe7l6ede27uX0uT+lZDb2d97PSPUGt6x7HjcsxL7N6Mucb+
N3DPiSfl/WIeTiAQCMwt8NfVBunFbY6m8+mNht51enKrpVPjK2YpJnns51bM
vr4ZNUd9etlsGxy7/Ar532rn+fi0eeL9+nHrK3LCKqsWk76/Xu6NuyAjOD44
vgKN6fiVv5R888Wydp4trF8EvqdZkddq7m/HDpajGr3o4sUzN9xQXLD5FnmG
XXOPHJo79XjhxwcCgbkFvW7U+56b+P2u444vDl98iTyDg29i9ozY+7V77Fmc
9t3v5Rq6C9PZ9ehFF2df3pwt/vvjl16a+4KwFR6aPDnr7Pg39Eh3jz+h571o
9dTaP3L+BfPvgrtAcHxwfAVaO/GpG/Y/IPM2e1cMXxyL7sTfXrjnnk/Epvjz
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
W8EMG3EH/XfUC+Y6pV12yZpkOj8zPpyR6o31FjuozPHrrcNW8vmzrZTOSDqB
OV1fHBw/CDk+XY76DrWe5/9qs7yH9ajbd8TIbH82z5NpBM6mI70t8XUVb2K3
mklLiyLOJa/Gvhazq+bP+V1wfCAwf6CmSx+qp2+6ufUD0pmAm+TI7Wc9XsSe
9xo2PHMlfxy30p9XujX7WZxcTg4vqqnVN5af3xs8j0+g50aruLX4ode845hj
ct6Pxp09oc+cPID4/klfXyf59qPy58SZ26fPt0P5OT12cvKV1Qv5rPhWTlxf
bucdn8RzXQsdvLgjH1xuQKxSrJ3ezvvo+3XV3/+ez8snr712Jq4XLxDfpO17
Kv2tAtuAfeQ7qeD7ld9gC4hDqL0TP2UHsAHUDapLaqVvnh0Exw8ujmcj4nX2
MV3JrWPG5FyT+/z6ZO/Kfbmn5b/aQQ6Ofewx9icb3t57qex9w0Znk+r9SF9K
S29vNcbVAoHAvAMu5WPjqZmg/9U992SewqU5D57858MS/9nXYtRT//DHzONq
2nASO18te3PODk/h0XZz2ivQ2zkfPnHGOBvSotXFkerU5QHo3+UInDFHLv2p
4s5xx2VupaG7a/wJeT4mP/64L65cXL7ddlkHx85QL1/Fy8UhxBVxtTPvsUsv
zZwsV3/H0Ufn1/R73wN9/P7JphArkH88Ysmlc+yez5J1SubQLbVM/izyAXIH
rr2xJomuX/6CndIKzkOfp7GuTs2+65YbmZOzu4LjBw/HP3/7HdlunZLs28eS
Lan3I628+9C9a2YDP1vc/uy0t95smDHXDPe0/fdi2s/2ELt4RsNsJ/bu8St9
McfO5LXsN3qVQCAw73H/aadlv5LPCPYqPhG/w+VT//innP+2j/EZXqV31ztO
v7feINatnkaPjU5g/8uRT04+hXozNfTmYB2a3rc6R/jleye/fKfEsfzzoxKX
4nC5exp2/gXexbNq3Pjf4gJ6z5qZ5Qzja8s30gs/PvWSPJ+GbyPHwLfB10el
1zKbRj3cNbvvkXk+1wkmH8a1eKzf6cnjs/KDxNblJtTj7Tqkrieg7acVNHOW
5pD9wDaitf+oRc9c/1uc+cMN82effvnlM3+P6bP7nN6/gro7j5MTmJW++MHx
g4PjH54yJd/b8uSN82HtTbEhMbbqMvE+u/niZAt/0GCbNsJj2ctsUXEx58c7
TdpW9SPuf7kwfXIfPOOMuXeBgUCgLW4+6ODi0q3+nHNn/HL7EZeYu2ZWi/no
fF86MPnjyr+8dvfdMw++1cHeB3ECrydWp15Ozzc5adoyNoNYtveoz2odVhye
+XyJYr+RI4u/lbl1+X7+LY0a3uXr8xHE38XnzZbRh+PeU04tnrj66pxb5+/y
53sD7lRXh/fFItTSiSfw4285ZHT2u52Bzkg87nPSAND4sz1oAmn82BpiBc/d
cmt+HTVFtAPm4PD5XYefuN+5OGbUEnkube7B96etsh11wmpfKS7Y8jd5hq3e
Ypf8+S9Z4yB+yv4Zm94vz/lM9pfYPRuHLUbv0Kp+oDcExw9sjmf34Ws9neja
2fHs1IeSvarmxZ4+4SurF5dvv3323z0WN7Nr9YyyT19++OEcw/c3i21vD+oH
rX6Erc2Obs6reW99psSz9JBotlkDgcC8gRls+rnhUPtaXB5f8aP1vxI3r/Sx
Mz1vm22z/9qq33st8SY+x+/sB3rdoz+1bI6ZV7HtsUsslevKd8u5fLq4xfLZ
IoZwW1rq254t+ZJ+/aHki7A5aPYu2GzzzLVXlHlrMXyfY04ex/xs55T3zjp5
+fH0XbABxOzF+ncr+ZqNoqeN3526zjdznt/j5NjVDPsunK3i/ThZz3z6pkMX
resB6er1z9sla5tH5O9k92TvsAvELMQHPE5MgE2j1o7P7z3kP8RV2s3S6YTg
+IHD8fJB1f1J/4aLaUb2K/UqbE15qWOXWz7blrQnbFP3sL3EXq3brYtnPUpV
B+PfY8rfV8v54N50v3p+u/w97vcebPUqThgIBOY+xOMenTq1uDj5v/b/ziXP
8lXZ+3x6mvdWva0A/1245ZaZyyrgQ/PSxQLE+MUD+Jk4Sb7cOYHn1Y97nt51
+muJ0esfx7bwflnH3sJuUHuLE8XJcf19kybNt7mt3lfen78vZ++a+eBV/ZEa
P366mP/xK66Uz1f5S7w+MfnjzkS8jPtplfTRpdGnnReDcEazBfQXU+8vr8DG
8HhxBefstHPPne3rCI7vpxyffGY+uDjauC+sVByW7EuxH7Eeuhfad1pUHEwb
ouad/cm2Zpfzw9WDmOGg7tQ9LGZv7+eV9iafXS5O3uu6vfYubh07tv635OfT
u6otefrGm/JzxeRa+QE0NLQz9CseGwgE5i5w521pr+Jg54Ect5ot/CP/pm7m
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
5ALUqmxT9qlT06EH5Ulrfz1rctgaZsjgZRCj1z/58S5q3NktcnzmJOtNWc1l
8FO9rj66gUCgPeTQ2N7iXnLtfHh5vcb+E/K46qdzD5WGI0rO3h7O/ab/af0c
F9eL3dzYqheq2h3x897ygTD90svyPAozUSvoPysHl/W/o5bIsQGa8P1Ljbg6
PnV64nlj0vtXPd+u2nnn4tbDDot83TxEcPz8r48XB+df4225KzWSu6f9gptz
Hcy442bieho49jwe7gRngBy62ppG4Gu5Ofxvr4vVs8Hl7vWjU8ciHuj8yBrA
b69bnL/pr/I5YzYj+x+Py+PJ4/csdvrpp+ce1+ZKqLt/sylPKE9w3R575Phj
IDCY0e5YYYeLf+F2M8b54vphvNWirgXv08TJx6uFNa/sXPNcNtgw58q8jro2
vawaIZ5uFso5P9u4eL2XmS5qv/C1Pjfyf3wSfvo+5fw1toJ+HHjdefV8sjHo
9tgB9ELen80iP6D3/KzMVQnMOoLj5z/Hs6XVkONE9i59K9ub3azG7uK0T8x6
fbDMh5mhqCel3rKdQGOnFyK/vRPEzOTanRficTT69bmP6+d8+l/TPv5rORuK
f27OBO2A2j+9KxqXGL29TxNEM9AMPTbogRt7PAYCgw1s9uv32TfXTVf2O20r
TqfPURenX8xFW/4mzyVpVzeuTo7W7Y5jx+V+dvjX2eGn3tT6b7Q7vqadf0Hm
5EcvuLDt51RTSzMv3zd60cWz7W5vi82rf6PxfafseaEnlzikvDx7RH+t837x
y5xXcC1sFv5JYN4iOH7+c7x4vb1hRhubGH/KaU1Le4+WRYxcnktvWnk0fZLZ
7vzoTpBDp7N5pMMeBj2ovK9+NRXo9vRrUo/DzlBzo0+G/g3OIH2v9LSgD9R7
svrJbmd/mGnzysMPf+K95OZdH71PIDBYwY8WF1ODAupS5anFya7dc68cZ+eT
P9vQT6ol0tEkx1efhToy96Xmb5uj0lsNjLg/+0CtSzMqH5xvbgbstonXzWy/
LdkNzhNnQ6s6Ob151MviebkG8UZnluuc3X5tgVlDcPz853h9IfjN9hTbXr28
fhTi2ricbZ/7U666Wu7nvM+IEblHEi18J+g3x9fuTeOWOT6dL/pYdOo1S1Nv
fo2aPTECP/njLzX8pNV/77XXsz/fbgYNW4Ue+KNZmJMYCAwE4MezfrBBz3xn
+xyn536vm2+R55p36jnFd9b/nV0tDy7X57wQE+xLrzi2/SXl3BP7Ue5OTE8c
gHZfTE58Pcf1N/55r7Pa+exy9+x/Gl22itds1ys7MPcRHD//OR6u2mHH7B+z
53dP+0osTI8bMS+8qT8cnSydvD5y5g3rdaO+lc3eCnJw8nLd+vG9cbwzp+L4
3iC/367WxlkmbtGcqw8EBgvsM7lyvGxOjLyYfPWVydbvbXYTzrTv6e31ytLL
WgyO9r6d9r0d5AXNjaNzpwdSa4PX5eho6h5OfrkcAj+E/SEf0Ak+u5mw5sTr
a/d4i3xdYN4iOH7B4HiaGnE2+bnJae+LzbfqWQP6OuNa9j/d3dk//km2l8XV
G8Hm5hNU8cB2mJE4Xo+bu5Lv0Inj+Q5q33qrufEaXk8+sFUffDoD5xMbJhAY
rJCz2nPY8JzXopPTw7pTLxu2OD0rLqfdEes347ma/45Pz/vlJrk3ardzXWhw
5Nr3HTmy2C35Dfa33+W+Ok39VM1HYYd0mjkhVq9G6OhlPp1r5APzH8HxCwbH
06HKo7Gpxc3VzNO6NMMMOn1vcXoF/r3n8sXF2Squp10X4xfT6wS1eHpS0Pd3
jNW//nrW6NDS1DrF2dPXZebtFX/drqUWWMyf3uDR6GsbGISgdROzU696aOJ3
MS/2vdmsNDStoF5Fbs7z9K71Ux+r5ri8/L2543efMKHt+7MJ2AbOCjl2uUHP
kT8T6283n+qVRx7N8fpW+XugsT3i08sWBy82KvfpDiwYCI5fMDge9JK0z9Sq
iZepW7Nv5ObyPLq0py9MNrycPK29PlH0cGLifPVrdt8j2/j2rvo7NjXtq9nu
ncB3YB94bCsdTYUP3nwz63zF9yrfoR3U1vHl2+XvzFUSu2h3ngQCAw0z9LX4
01a5n4y+b/Q3dO/0bXJwdDd6UjXOdXnrpZfy7y/63e+zlk1Mn/bV89rhih13
zH0yZ7TQsJt74oxwxvgMZ67/g5yjE+/rpieOc4Wd3wh+gTPI7A29NtTGBhYc
BMcvOBwPuBPP07KaJ6e/s5z6BYlb+ff6Tahfw/G4nG0vVi9uZ+96rD71bHOv
MTbZ6eY/dMK7M2ZkLa8ceSctLj6WG6AP7G32BX+C3ldtbSvccOCBWXfbbk5V
IDCQQIsm706LkvPwaf8214k7ZuSw+NigLsWexMP2sFoW+bTe5jOLCbIH1NxV
sB/l12np9Kih39U7p7LB+RFig8/dcUfH1zYfTQ1N1QdbHMFz1QSprXUO9ef5
7wMRwfELFscDfYt+UHrQHbfiSllvZ++Z2aaOTk9KPeDp5cXExOr1n6Otu2fC
iTnmLrdHl8Outvf0m3Z2tOo9o+cU39wZ0sk/p411Lpy+3j/1OgPD+XVksi/a
+RtydfIDneZcBAIDAfpF4nf8KH9FT9M4v70R9jKtvH5SbGCaOjF8OfZOvnsz
Lths8+KaXXbJ+x0Hn/2TjXKPK/Uu6vPkCxp7yeJq9kdvdrcaWvE5j3EGqOPn
h3ht/TGiB/2Ch+D4BY/jgYZd7ovPnmPaJffy5eXO6G96g/NC/YvXka+ni2WD
O2f0u6ygZkbsgH/RqcekmBz9Lv/8zS5sdZ+z3VydWu5ru3LOQQQCAxG5z83e
+2TtvLnttDHyZq36RlQQR2PX7zNyZJ4hYZ7bw1Om5DxZX/Bi2t/qb8TkD1po
ofqsavm90yb1+ODNMF/a49vl20FOgS8gF+dxeneZf+dcEVfsS91eYN4gOH7B
5Hgwn43ffsynPpN7SdC6idnrcdtb/ZpYgPnxhy22eE+drd7zdxx1VD5r2Ap6
1VS96PJcia9/o9c+FdPL+RNvttH8V/CV5Xm06Wz7oE38n5aYhjfOhcBAg3i1
2Lh9azYr/1gevZNtjjfxp5lRx3xuxWLsEkvm533UR81K7iWf9vjuw4bnGF7m
5HR2vP749F6fW+l52s2LEU/U00bM3wwtPSudKfrjq/UPLHgIjl9wOZ7+Ta9n
djJfXt2KmNixyy1fPHfrbbkvpHya+ZBiZ/rlWWJo5jry4eXH1MDQ36h9E0PP
OvwDDsyvh4fta+eAOF5vkBvgf3eTR6etF5ds18vDtYktdPJrAoEFGezT+046
Ode7VFATSvOmdytf1/7Ksbg2MbJ3Xnk1++v2gv1NM0/Hog7evHjxNXXp6tR7
+yxydHrQmw1zxg83zHwtR9At5Pr0sJEfbIZ9LFd32OKjcnzRDAt71yw7nzH6
2C2YCI5fcDkenB32Kd2qHLwecXsl+1z8XSyOPt0sWntMX0pLjaz6evWutDV4
fErJ5zR5k777vWyL09iYV7l3ej06/r2HDcv1ep1mRuhlRw/w2vTefYK7TpiQ
awNebjOjmjbIjNvmuv5AoL8AP9ufVXybtk18jL7FnAhcz4duBzazPnP2I72d
GFuj1oXfn3tnrLZ61tm008voVeO58mP2p/iBGlXxd3aCGRTdzHoT6zvnF7/M
OXygs1XjKodPx5dnxaZzhSZH/w6zLOkHHj7v/L58bYF5iOD4BZvj+fLOD32j
gQ8u/nbsZz+Xa17sXbOg/DQ/zmJXq4VTY+/8qH6fVzonzHbMjzvmmPrsuLTY
BnT8anNwv/41rfR59jVdbm89LeHxyy4rxicb4/mG3H8z9AG5qzxPAoH+Br6z
eJWasqeuvz73qMnz4sr6Nfu1HcTmPUb+Te2aHu/t4ulPXXNNnhP76NSpM/3+
jbQf9b8WMx+T+Hfid76b93hjToC+VQ875wSbpDfID5y/yaa5953XPXKpZfIc
GjOvzavnN7xY+vli9Op6AgsuguMXbI4HOTA9Jp0B/GfnwRFLLN1Rky5vvs/w
EZm/u4EYH+6m7+GDiBfa3/z6xri8eL8cfzdz4/gE/I/GOGYz+C9X77JLzJsM
9EuoNZGH5tfiYDEy9ezs8nZ9KvnTNyRepoG74Feb5T1Am9ebjtb7iNdVcTGz
oZ0J9Dm4Fzc32wAV8Ly8HV+gE9Tl0fHrp23ODa2enN7N6RxwDuWYw5Zb5seK
T+hLH7UxCzaC4xd8jneO6FMpr3f53/6We9Wofc85sDY5OvtuD71yfvf7Xl//
/VKfp0d11TfDT/EAMT9n0S1jxuQZ0L4Iet/e5twAn4EP0OmxfJnzks/wUps6
+kBgQYd6Mfnpvydfl15Ovao+MfpTNYMW7+qd/p73pdpWe1r/qnYat5mQjiHz
Yez/+04+JefpDl5o4Rzjv+WQ0Tn31Qlid86MVj0r6Pn57XJ5etuOXXa5rOfx
2pWtQk/g87Jf6IG8VjubIrDgIDh+wef4CjR2tDeTf/yTvA/NprutzQx5PvSB
aY86B3rD+++8k/e2XBuI0fMRnD1yjeLpVjXvks6/m16VavJ8zk4zNsQIzMaL
2RWB/oj7T52YY2x6T/LlxcT1rRGDV7si51WUx4cZTPpe6HPHd+cTP9bH+54v
ffyKKxW7pfc79dvr5jx5tzxLE0eTI7bfCHtZ7EFf3UOS7y52h8P10BGL9zfn
yZNXXZXtfecCGyVfW2CBR3B8/+F4UFeuH6X9bZ4kzb0zRKzbXjfvxblxR9qH
Ym36S7LbO+Xhnr399ty32oxKZwBep62Voxevr+ZK0vLQ5e1V9tLt1Nu+/mFr
eb7ktHPO6fgw+b27Iycf6EegR6n3dV2/ODD58LTrtHKNRwXuxJHscvUuNHHq
4Whle6uTb4b6OXE1r0d7f1jar3rcq5/pC/SxZ6vrwcN31xeDPtdZQbtL29s4
81k8UM28nIBe2fIRPjs7Jmpe+weC4/sXx1cwG95sCvF4NTf8Arwv7u3f8mTi
h3pSy61b/uaMYKeL9/EB5NZoZuTu1dvwPfxNTz3ngDid3Dvt+6MXXJj3Oo7X
w44t3zEXl74254Y8YqcZNl7n6l13jZx8oF9A/Tl/XQ95Pd70l2oHM5n47ROT
Lb7v8OF5D+oV91GnmU5NkH+Xr9eX4vBRS2a/Ws87Gho9Jrx/84y4dqDLF2O4
9E9bZU2A84Hdce1uu7WdE4f32ftm3YkdqvvvZr50YMFAcHz/5HjgS5z0jW8W
W5WaV/W0ZtOKe8u94Xg172z369IZQauHw/nmtEHseToddrnaucld6GPNqjfX
lk/iuXKKdPrtan/FA+TvOtXtOPOcfe162wcCCwro5C8qa+MsNnO7unB7Iuvk
0r5iP9Ox6D0vxvbSffd19X5mvJoPMWH1NXNuXD3eOw396h+aMiXb6eJv6lh6
A4732F2GDstxOc8VF6x10APQ0Ivj8fXNi3zi6qu7+uyBBQPB8f2X40EMUI15
NRtSTSzYl+LqlQZ2puc89VTum1PNfMs9b9P+5RcUHS5VHZ8zZszio3r0RPRG
+JlvIE/QDDlHc6g6+ejqhU5cY82u5l4FAvMLbOeL033OZlZ3qpdcuxpS+jdx
Mr6vehWPx416yLOtzy21Le1yaOyDPP91iy2KCavUe1zoJ/dui1lQtLBq4PWi
6GQnm0Mpx0Yjc1Dawz7bS13443Jyav73GDo05wsC/QvB8f2b4wG3HrPscrlH
Bf+aL1+vnRveMY4IeF7tmnq4TrW8wNZX90tva850BeeZ/FzVm7Yxbui1+SGt
5sg3InLygQUZNCXsWH45/53t+uq0aS0fq0ec/SB/pveUPdF4hJj1gL/P3mDD
HAtrrkOlvb8x2dI425Jn48/3BvqAvNea4vbsEPq4oz9T18qLtU+/9LLc65L+
rrf5Uj7fkcutkPMSrXpmBBZsBMf3f47Hn2a+ihvyxfnu+J42R/y+E/jm+usc
MWrJT7xmq70vL6e3TqtaXj2+1OCZka03FqjPlyN4/cknO36OS9OZye9595VX
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
GTZ08v7GJ+gmVwh8JvVIdEz8Jbn4qp+nc0hdk7r72ckDuA6fybW9Nn36LL9O
YP5AHNl9RUunrst9K1+NT2nUL9t6m+yr42+zD19N9557Nvvi6WfObX91reL8
X2+Z76Vu4J6h5TCnjg6NHdHpsTifz89X13fO/tKTZt/hw4ubDjwo25fd1MQ1
QqyBTc3GYKt4D3pSe4Vt0U19qOPKdYxf5cs5L1H1sheXt8d9r64R14d2ZeAj
OH5gc7y8NFuePzNpvX/O2tpm5F4iJ56U/SFnq8ew+ytfRv1cp15y4qX6ger/
1al+CZxRj6T30IdEz1zxxGadsHOdj8Evmh2NvL5+ZnjwAVvV9wcWXOBOteh0
JPof0I+IN/PV+cg3H3Rwrgt3PzVvT/ll+XXxfPPju80lqS/Ff+bTiLP3pa+S
HID+D7R9YlHsCxo3mlI1+930e6Czw8d6Qd3c2Kc5XR9dodzYHcnu6C1mlnvq
f3+9nH83Z4ZNrdfPbWPH5ngHbYI8gJx8p1m1gYGB4PiBy/FZQ3/Kqdm3wN+9
2ezi8GL6NEfmbtP70Bl1w7Nqj9TQy1uKwbeql3ceyzN6DP/deqmNXlmukx7q
2Q51Qt3A2UrDdO1uu0XP234GPLf9kCFZM4ev1H2puZTHadePQc6JTSeH5P55
tIs6eBAz4vvn+Szf/V7HeXXNcDzoL8WPp3+nV2cf5J47m2ySeZWdomd0u5mz
Yk25T25acgytNClq5E8v603p/lvFCMTS9IIek74vcYCZPmfax2IiByU7xOzJ
u3upmQ0MDATHD1yOp6WjE8LX4omdwM43R8tjzY6jreumz2cjxEnV9/I3zAhp
9IOcyfTQNH7qmdWyd5p34zzCy/h5xizMqW2E2gE+nZqi6Hm74IMmDlfh6J2T
vyk3rd67N1uTnWleofg9TTk/tSutWnrMM7fcmuMD3tNct77g+bvuyrbx+JW/
lHs/Nr6jGBm9oLgVHR4N33PJX2/kevkuutMz1vunPBumVU6sgnp+GkB998QI
ZjT01JHnknM7fPFRub6kVVzfnjtqqWVyDV3UngwOBMcPXI7XG37HZK87I9vV
3TgH+BfOmJx7T/7+E8lXctbJx8/Kpb949925H5eZ8++UZ5lcolyq99EbuxvN
u7OeLWCm1uxys3PWa8mxfjQLPXsC8wbyK/Ln+iux8fRWpA2Xc+k0OwHYsfLW
+t/52W3cBsfiXvf+SWt/PX+GbiFOxFfXz4mOpN0cRFzv87M7jl9p5eKybf+a
69flJPj4chLy5a93Ucsq5kC/Iq5x1gYbZJ2fa9Afh97v9jb8Xj13wpe/knMS
fdXqB/onguMHJsdXvehobq5Pdr+8d7N/4HySoxu75NJZkyeGXp2j7H2z58Tq
ZwW53/0f/phzlOKeZmmbV+uMazczpBXELPUCzRq8LvvltsNT6XPkuaN628/m
awXmLPCxOnKcRe8mp1zxlJ/i9u5PGo1W9p771ix4z636sHcDW5sGRX8GMaa+
xK9rZY2bulQ6gdzruRe4Fv1t6fDFDdgy+k3w8/tiW4BcuriBXpUHLbxIzrHT
+nXSqvpeaXPsy8DgQHD8wON4PS/4MXJ7ODXPxUw/xfecozRIeY7Fj3+SdUzH
Lr9CPY7dpL+h83GuvjgLMT25Qs+TP1S7Q/cnLjArtfTqoflI6ntn63+Ksk+a
fKae/eHHzH+Iv5tZoAbiJDMPjx+f9WufeNz772cupqXDY42xbn+7dcyYzHX8
Y7WX3YIfrZeO59LGd//Ba3kP0a7rdctW7ovdiIfVBuJlGji58/dmQf/G3jGH
jmbB5+hkZ/h8YiJ6TTXOnQwMbATHDyyO1zOTls1sN7Hxqp5dPpyOjWZXbJE+
6Millsk6H89pZfv7nbNHTLDbnLiYpBgkP8UsO/n9gxZaKPfW1N9zVmE+rTz+
s32Y290KOIXvxdd7KtkOgfkHvVceOP30zE25Z9H06R1nG9mG4kti2xYdPMgt
8f/ll2jaq/kJcjLsWzElWnRLDElNm6UfHv2IGav2gddWU+L3Hpuf99JL9V4N
TUcAbqX799np59tp6dpeS7oPp/xko8TNw7OGwLwomhE9Irq1Fapafnl+8Slx
DHtfb4FW0E/y7GQj7ZFsbp89MDgQHD9wOB63Tk17XI8bufgTV18jn03OI7oz
fT3Nr94t2fxqfB4866xea2fE850/zo+3O3C080asUT8c+UZ1enQAavB8Lnl4
5/ms+s7sDb4HPVSr+r++vpYaJJygz29g3kKMp5q3qq+SOoy+1Dy8Q3e25145
tqPu8pZDRmedqBp62hJxAb2bbk/8J2bjPhTTmvSd72a/++BFFi1GL7JYji2Z
sapnrX0hl+1vckqnyc2vtXbucyOuLYZkD+F8cQZznWj95e/bcWon0PD7XDQA
dHNsBLqTU9L7qYXpptbusYsuzvtMLE69gX1ONy8u0apnzrV77Jn79O2frlXc
JDA4EBw/ADg+fTw+DQ7Hqfzla9MZKC7HN+EjOY/47fQ2Zm+pi+vWJ+bTOOc8
752m+bPgzDM7S7xTXTFdvfpgvXOrnCpdkLj9rJyHFZxh5nPKO8zKrLtG8PHU
EfB/ohfevIN7U281/WDlh2Y1tuN/PzbqCausmvzwkTleROfp33rYuv/oyq7d
a++cIzIHwT3Kl8Wp7MTr0+dg605N+4N9KlZl2TMeL9d92+GHZ/tWnoteXf5c
PGnCGl/NvW7Ntsm1fH04IvRq8DnZGQ+lz1TZvWJgPp994v305m2n4WNj0B6w
S/STrmoO7AsxL/VzcgE9v//ww+K8X25S7JlsGnF9vWwX9GMtMGcQHN//Of6V
Rx7N/dz4ufY439QZJ454aOJ2fom4uX1tZjXf3cwtWuVu44L8ChwvBv/Oax/3
txbn56N7Pz/N/TDH0xk6U/w/fYU+n/OyL5q7ZtANysnemfyV2Z0h60xVh6RX
aDd+U2DWwU/HWXq4iZ+oc+imZ1sn4OLTkz2569BhOXakZoLehB+Ps+UC2IW5
L326/xrvF3Nl9Hoz09Xnakb1ePtJnlzcnh9Pz3Hl9n8r9sz97EYUE1ZZLdfj
sx+8J3u3t/6M6trkzHwXrWJSXseMWDpYMTT2caNGwfdmv+P36/be5xN5fJ/Z
zAYxkqfKOn99de0bcQy9rdjJcc8PDgTH92+O99GcbfrJ8yfE/C7ffvscf+Tb
mAV769ixmVcbz1R+AL+7L/lt3K5Pt96hfHv1cLTBzg66Pf4Qzm8Xd3UW8fGz
dnk2vlI5VP1vH59FzX8jfNZrkt2innpWNE+BzmBD0qaJmU/8xreKhydPnu0Z
KGwzvRbk0Gnt2AtsR/1tu6mxfDPxNTtUPbt4Vl9qKfnVU8oatWllf3p2Iu2L
unP1a/aHuFqrmQv2Jy0M21s/+Xb7wF4VU5BvZw+IX6lPcb+y1en49e1vl7f6
qJxJoyaQzaEOUe3AFTvumF+LXdIp9xYYOAiO798cr3esvhfyj/hVHpGP4Qxy
/uDiVnFt5yR9Mj+h2zPOWaGuXTzeDDpnhrkZ4oJPXHllV7qjp6+7Lp/NZovM
KvhXznb+N43S7MJ3hCPEKKJ2fs6BzcT+ZEtevdvuxYzER7O7ldiq9GLuQfd3
xen8bPkk9Zq9zWDl0x716WXz/Bp82Rd4Lrt57BJL9bw3Lud764VDPyfOzlc2
q1Fvyfdee73Ht79DP7yVVs71Kt3Es9yPNIA0NnL/k9L+NqNR3+je5jCoO3U2
eE85qZ2HDMnzqfj+9H1vt8i7BQYeguP7L8c7Q9UJ8ZFo7OQI5STVxYtD9ga+
vLke7IO2KDV7ed5XOrP0uaXZ0R+XfeD3fT0rzAqb+qetOvbz6g0+02V//ktP
beDsgt9lFpdc8ezMwgnUfVD1HHhYDaf/nt0+wuIBZsmJGdGON/Z3qyC3bz/g
szfa1IHgPbac3JJY+Zt9qEl/+5VXs07Qc90rrWxn14679Zp1n+ca+MT5NJ7u
d/xPLyDv3he4J+UmaOZ2SFxNHy8+0lu+6t6TTs45tKOX+2yO06urFRuwl1vN
mgwMPATH91+O5zs7P8SZaXSdWXrLiaHzI3qLhzsfzLSiHW6O2/mbvP20c8/N
Z/W4L6xUnPrtdbP/IiZKLyXmNyuaKef9WenccdZ0qpXqDfw1/XH09JwT/xPp
nyo2IL4xu7n+wQjf2QxzYP+ydb4vad1686m7QdaPHDI6a8hpzjvFi9xbtCZm
0ajnaAY/XJybHdDXGnGzEw4pdfe5HqOXe45/T89Jv6fWTz8qtrEYOru4r/eY
fU4zd+PBB+deduyFW8aM6Zj7YBuZO6nvv15Y9pv728ynF9vMiggMLATH90+O
5yvwZ5xXZl7IK6p/d8ZV8zG76TfPB1ZHI89e6e/4yLS68oDOaromunzngjPS
ezhnnTG99cFvB31tfOZZnbFdQY5SPIEtMifgHHf+q0GKHjndQ0xZXF4/ZPWN
uc57NuMhtp1YE338uYmz9W/t5jX1WfK/n/uisY5DPF2cWj6cXdsX7Sctiv1m
5ozcVJ/0guk69Jr1nnskjtcrnh5ODJ2N3M010d/bj2bEvpK+W9coPkIbUPWj
bGcz0N9vU8bpgXaWff5aL72BAwMDwfH9k+PxufpeOna9rnFmde7k2dErf6ln
Jntv0FtTv+3pV16ZOU4d8cRvfTv77YcvNirroOU+m20G5yiN0az6ateXecE3
ZiNm7/xUa4yX6RHmBOQu9Mh5+Lzz58jrDWTYGvLCF27x65wnYvM11l3MKvDe
PRNOzPcgv7yvfV7thftPnVjXqrAj0+ekXTGjVn9HvmxfICZgv41baeU+x9lB
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
PNTE/dKuyU929YMXW3u/wzZ44dIco36fevf1rf2hKRC36sXvfuJB+DricRz3
Yw3zR7vMnu8c5FT16Ydvc60dW5HGL1On8UhaE+L6z6c9X12YvD6unt5Dn4LA
8IR35yY/0s88czNN+UWwC/9iPfk73iDqxxJOqfc6HAdQcNXWCN5DbcHTv+zW
RPQ1sTEOh6/Fh5kr4/fRCuCPfBflekYxfsKtJ3wlcFrd5ChzdPTH4TfqlbND
eiZ6MvfZdsydcs99H2ny8GaeVZ2v52Phy2h4+GM0gdmeG5YxftVhvFobGGom
tFjTPljV0qvvfqplHozcsL2kK89amu877h3v2lcfzLz3V171muByy1hY3vcC
8esB03PqxcBq4/XJpMOuxhFyg3IOesVU9zu5AzrBYblZMZDPOSBhBRziS8DX
UWt75fRhsZpAHDbMhxFN2ro+xv+CZ2JcOQXvNW4Gt91L8TtfRfxJs6meIrj+
JfvEvfInnSHdpudO00ZTKR9zetEXEN9zVlof+HyvsUZg+0Frrxv3XB6edkSf
oHKd91m3TabWDrbzG37Rs2/cKPazK68Mf9t3kkbEmrd2+IQ4jkc6fIqnn3wy
+Hl5DrmDUbcN/Io8vPV5cTHHFnfSpTtVl6ffje+JmD7WZro/nkW1LlEOH2dF
u4svxK1ke25YxviVj/FyyPq1iE/pXC/Z5jPL4JbYPvrafWH71veA8fafp3vm
g+m1xNRtmtvS1HWryRWnquHCWYorxAf8DvG5uLzcd/zdfm82Vj1et+fAEnEd
/btYAu67ti5OsWpibnmL3RYujP4zbT7PMPvpVVdFTeAh664XesXZ9ADhM4ln
1djhOmBAV/30fDMcvBwJDYgaDvejbvgKfWDpDXD+9P7WLU5IDHhv0R+4PPzb
M5WXiZ4tW20d99x9MufoxDe9OfAILyXHpEccnqA6332YyTfwEdQajjprdpjx
J+Wl1JfTxDtXPBSs9nl8ObrBcjaNZ85HwmWUOgOcAi0+zrxPjVzV9FGQ66CJ
KO+1z9aX2fu5j01+ke+eGvxqfajf973Dq5X1Ap6FZ833ouO9cUSOItv4Wsb4
lYfxar3sHeIf2nJcJq67Xsvq+3pi8uG7uHXxM019tX6my3DW+m/hp6tmX6L9
ma7r2Tg02V5Dd0U353z1OZPze7TGa9PCqT8Xa7TpnWCynKy5duJB+B7zs3oa
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
2I/lb+3patfhmXnw6u9wt3hF2IaXFzfX4zAxg5524lJ+x7cSXt/bI2crHjNz
3nn1nSNr3xFTwxI5hT7z3fUBwIsfv+krlssliw1p4XEO8ha0jmW9cGniXjGs
uQCzySUzORP1Ae79cZv+5Yx7sc3UaLG//JeviuvABzVxuHw/XC1tHbwSd+rB
Lp6jfYT5oe9P64F/dljyK2lCzUS35txr6yZwP61NvgP89NqZ9kX1nPAxN83i
/sNQ67Oc4aRnMvyEcf5PXqLkiEax6ImYfB28RpuWoTQ+o1wUP7Wt/oFWxfcP
109PErmTkvvvyFG45zg9/FpTzya1DHQ9/CT+Me0Nf+nU9LzwOFXtJe2t5+X7
OYr2Idv4Wsb4+YnxYnDfzXpfUJycvCeuzj6hV+5Rf7ZRxNx7pFhs1+Sfi/0/
nQ5/x+/x8WGP1/DrHfLQ+625VsScNDk/PKl5zgs/wD4Pr8VzwwzG4BDFjPYl
/MCwXnI4TX4EvoKv0ddw+vDhC+k6y1glZv+ke4J/UBfHX2ir55LHl6+WF+lT
79ZlNO74BHlOtc2z6Z83qond4BA8o3/E+QyreaybHMYNhabDGsN7l5w97gM+
wSRckjh06/Ss8El45wPS+lGnhyvAkVT7LQ4zz5tvMZMayNLw57C4OtOlrBGn
ozQTRhxe1ax0ma+7dSOPrbdR31oBuCo+15+qvmXE3Jrkg9NLlBoWvpZclu8V
PsW9qPPn9CvHv+rVcY+HcevWID+Dv3x+8sEOWWe9WJPVtVj2kNqu6GubbfIt
Y/z8xPi+JjcnFwyv8LL2Jt9dcRZcVl+Pa9R3Vi4QXqvPN4MKLyuuwNOK/fC3
cnjLYGK6dH2wxfN4gotbdOx0T+JmsUTZE++8j308MMAe3LRP2pPp4kO/t2Sf
2JNo7Np6ezQZbnZv/fZSHIqTN0tWnl3f3WF92/D4cgnyGK59NvZw2l9dC52b
3EmXFmquzRrAHTz0/e9HDKn2eth8obrJh+P6m2JQMSZfEx+tPg2npO+qPDDd
or6N1hEdhpiT3ynWp8Ho6uVDZ0H3fXVHP4dh5hnSsovb64YH1086uPZ0PviJ
axrq6Je51uRr8Pf4icPmLjWZenf9D39cu/9wPHpWpti5fo/LmYxe4zn47HL2
sWfCp8Ll9e2LpIckbgvPV593rM8Rv5h/RiuQbfItY/x4Y3yb2d9o0cq+JuKk
Mkdrnynzs3wB8f0uBe7vttrq0UvH95+uLXqUvv6Nwf/h/fcttHjVGWB6jMh9
2mursQYMhwGOai2u22lP05+EjrDUY5ezY/v2FMGP8mv2Xbgo9GRyr8Nm61RN
buLy7XeIa6anmo3Zp8W7Yj9HXau4osw98CzhmPyAf4tp1VCOUqteYnyf/HDV
yv5A/Dg8sTiVTkTvRHwOvBKfNtXl4ajxBzPtL8uHixxW+oyufjDwkt/BB7RG
5COafBnrVY6LrzabfkD8TrHyY8V3xFoIvix9zx7vuFbrUX5AboHfS9dyQPod
+sFRfUbagP3XWz/OA49R9j7gn7vn4ng1O9km3zLGTybG9zG5OfVqcFHsL9Y5
bpNNI7fPz7dP66tlTjXeUy83e4b6upOK3uT2b7phf2/qqWEf15dHLToTd9ln
vS8fpKrd8h5qBMXWXX1QxDNyAvAFP63OUM54VH4axw2X6Y/s7bOpJcKHihHF
svLW9RmkK8o8P8+p1GnD+W8ljJArf6ahH1+bzRTj6UJxP0wMa1YczOc7wjX+
46lvf0esEXF02afR/VKHMJsYnn8Hy/rMCKY/sO74HeYn1j9XXwE5g5gLM8P6
gKWWtgv3n1+Bv8cr6VvLH3m25/3Fw+Deti/0tnJzffsc3l7MkoDt9JGXbvv5
4O99v6wT/qDvuDzVKGsk23haxvjnLsY3mZ539myYTMsrRjafDg7i+k9/1xYx
e2S/RYtin1BL35XLtqfZS8TZ+o7aZ2F408wrnLPPhPNN80ntvXSEsF3eU64Y
rsj5y+XfMoO55fZdve+d12znyetBY0+Ws352JWjufEbM5Nl18dKY3Z/iepzK
KL2BcOajYjz9Hr2i2LNqUceXsFxPQzjjXGj24L1+jjHzOMWS4uqZ6hasH3p+
WNrX+IBidH6q/gFlrR4tB27Kup8aYYZ7l8FOcTjui97F/Mi+sxxKw4v43pRz
J/kgfNthfsI56d7Kx91S6AxxHOpG+Z7yAXIJaixxb1U+LttkWsb4jPFtRjsl
nhBDiHfhqvhdvlcO2/4jxpdDt5dV63qqhveU85ez9V5dN5Pml+/ww0qPWnwD
vdRpKWYTE8oDV/vs0lPtkPa0wLoRsRWu2YPl40edKV43PW/1zXOPVobJi9BR
VLVmYkiYq+59lJ4+6hnEeX3jTKbXEq1dV40jbYdnp+8cDtpawQPRhcrhiMVH
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
SA63fk+9//fSeffFePUIcg3VeSfDTI+3UWbIugfia5ik1g4m0UGMWmsXc4WT
j2RNdM2O4x/Bef2arYkr03po0yCK/a1R/JRn1FcfIEdFF8c3qmsl9Kuxfi/4
xCfiu1L6v/IYeJ82ezT5RL5Lh663wXI97eWI4D+f2WfyEdXVyYfwFeWVHp5l
X4hs89syxmeMXxlmn4WhsAc+iLGPTDHaZS3xkr0Q96g2T4xaN1hE+07zLg4/
u5hbJxdAr93XaObk/2kEZzof1fKAW2YB0MKZwTvXFrHtDjtErbX9GcbrJ6PP
nHk+R7/0ZYP90vXTb5sXT/u3YzGXaPf0d3jvdeI6XL84FX7qNSgW1XdQ74K+
hkumn2jqbdhmdA5q3u5veJ5dRsdgrdBz4mpgqjXU12jYaRCvT9c6zOC8NSWv
g+u+er/9ltOEWHd8T7w6zmhUo82kO6j2xHnmqacij+65lXyAfEb0M0o4zD+h
sWz6Lsg/4N3VRbT1tDdroJwnvH/yhfmBfIiYczBif8hs42UZ4zPGr0zTR90c
U3Gjfc6+LcZq0mbDbRr9csaNPY+W/cqExeIbsYkYNva+FI/r3wXjzUzta/q3
iGX4E8P0em0GF76795LAXvz1ioqLaMJw17gJ/ANdoJpEOWD+kz0ebl+9z76D
GxOe0UGIR9VriZ/NFhK70R6ocfxkurf6A+IFyl5Gerni7MX98h9tPG7kELbf
fqReqFF7mGL/UXrb4dD5EnwScT1chde4Dc9rWD8EeXX5ExqH3p9pVm3CTbyJ
z7q9wHEcvx641q6+OcPmzXYZ7SV9X4nJfBZ+zFeT71bn5/3bbAnXLOdPJ/ej
c8+Ln/l9PAf/liaxy6wZ3z26PL6WukE1dHeuAJ802/yxjPEZ41e2iVPESfpw
0xDbo5pw2Z4kFyuGgV1+x/5qZg68uLPSm4xeS7zj9aPEVmIq2GaOzM0j6sdK
wx3DENehj23f+WB9zeITax3xgheFD3FDj3iU4UBKbbb8ufsFv8WGsPasf/rn
iOXUrdFxmyvwubT/O/TxgQOui/+Cp5DTLTH91L/525E09fwg76dfwih22ymn
BraVPdv4HdYBnaJ+7rC/bcYenh2fzi/omn/QZLQNOG6YqFbdXDuxL25+JvPo
6qafFF0hXwonZY3zteRTnm3ppyvWp0/h2+Jj+Fh8Lc9ZfuiZHto5vSzkyeR5
+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
qGquL+YFJj/m7H/659Dm3XnWWcv056PvlL/g/6nJi9xOjz5F2cbHMsZnjB8X
E3+JT83hkKusa6xggNhV/l4/0mGmp4j+H6NwvaXhT/kbOIO2XOco5nxhhlo7
cVe9Zq5q9nn7cVdvXwtWzzfa7rr/wjdwL3Eh4mOcOu21foJ4AT6Aa/t8kQ+g
F1Bjje+gkVNjNzWk5p4OrYrZXVZq8+p8Mr5bjhnPcMKrXxMzZ8yW4zeoS6vO
KexjsJgfKCfyzNNPB07TNqhxh3N9cV6vGj5Q9POtPSf8hd5DOAn9/mYys1VN
BJ2pdWk9uE7Xj3fgP8grPTUkF4XH4scdsu56S+sF8SE4HvyQe+7cxfbeu5xt
qwdfn/qKbONjGeMzxo+T3XLiiYHjh234p1HzxWCBfUncuvfCRaFHK+fX0ajb
4+xl6ojkYx32aXqwXcyi7dGbpGrPFv1O8Ql69dDPzcrS8hK3iifp3+SiuzRt
4qzA+I6YDp5Fn78ddhhaY0BTX+bY6fvVVMnP86fE+jCfHgvHTw/BJ6BFgMl8
hHo/Vz6IvjN9e6rIw8DEp1t08b/4yU8ivqSd0FvwSymudQ59uJqqqaNwrXdV
tBfWBD/I58P5thqA0vAk+AXxe5uOEb8uT2FtqMkchsfLvH/yvcxhwvnzY0o/
jrbQzCO8EU4D/uNY2nzZa4q8lddVfTzY714e/8pXxTOc7jG17uCbn/w/8X3Q
D2+U2UHZ5r9ljM8YP24GE7ZL8aV9HobjheXo8c5ifPlxe6u5mZEvT7EQXvcC
uewUBzlw10fFrLQFsbfRrJstg5cetifDMHunPi7OYbb2jBh+113juh68/obQ
zHXxEL0wPvkhF3ziE4Pv7rPP0No58VtbvRqMgS94C+clR6D3kBou/L4Z9XQQ
6hzL3mxibTF/H54+egG8/R3BYQwz7y/OpClQ60U/OEyzX5pnCpfN06kbzaOY
3Ax2ON+ka1NH7xpx8Y4uv4nPqbb9a8Vce5jdpdeQY+c7uMd+B5bTRNYNZxT9
+pJfZbYc/YU1g394otJjR98Ea36vDq2d+jp8V/BiekgWfSFx9m0zhrONp2WM
zxg/biYWgUt0wGawwfefXXll7KXylldW8KLUjeM71aZdm17joJM6MuGEebbq
pcU1sEucdPlOO0V8Y+9UVyW/Ld7D7YqPYZd9mGZtpjPnqyYWxqE+cOON8Xc9
Sbpyon0xXn89tVxdGG9p81XMLukysTpMcb3wqLxneHyz5PlW+BM8xCl/+3eD
SxNm9jF8iHxxn/5y8hfqI/ly+OWDi1zJsFp08TaOhza9TaP/6xLnUzwfuf/k
75Xmd9QkOE/1D33MOrGO+I9m89R7EsdnJv9Jzj5q3tLzd00x37dlu3kirb/o
jVPUAshN0Upah2J+NZR0GM7VusZP6EPUeo7Jt5CnkJM5spi9SHv37Z7PLtt4
WMb4jPHjaOJwmmHzRsqernrObZv2qD55Wnqy/ddaJzC9jMlw+FEzvdXWsd/i
hvUFUb9kr/72dtvFXHR57kMTLtI7z9amUnzH98DrMjVk9tt6v/KqwXi52a58
vLjxnA98MDC+qzcM/TzMHJaLhnk4C3ni0vAPeqyoRcOh85HkUTwDvYvE/7j/
ts+XL6GL55v1MRjm9ebN0jzCXM/gZH33ElY2cff8AnGp+PjuIX3oI55P68pc
PfwPf0t+/crFi2MNjJqnlnvQQz/0Dv/zDfG83G8+ktoB68x9ow8wh6erh0Fp
t6d1G/eg0pNXzt8MPO9lndJV6kHfh3MXu6u94GfovytPhPNq8zOyjZ9ljM8Y
P44GP+yNasbK2Rzyz3rPi9mGGc7zczT1aY9rMzEQTlPfWbo6/DwNvZk3Yh89
RW+f4cyZ0tTs0UaVGmwcAYxvm03G5Arw5l2xPrwTP8YM0w6emC/hHlaxu8nk
6Lv4d37SA+mcxfdqG5yf2P5La68bfgYt/pO1mfd6C+K9+/DtrkdcWp0d5D31
+ytnAKq1qOZZ/A58N9ue79THflNw+sdv+orot6SOQN6nT7+FJnNfaBv4PnxD
Pmn4JilmNhdmJpo8tZP6G9V9Gv/WPx+/pRYB59ClFeFzyJOoUSz76eEx5Li6
OKJs42UZ4zPGj6PRpKmhxtmrD8NR2pvh9vUpJuky3Ctuk94O1zuKiQsv23HH
wDD7IT8DrvEz2uaRtpkcLwyirypNj9iYL/rNC1p/z9586HobdM4Cjdmy6dz0
+emqd1abBR+HceVqzeR+h2kVPAM6P+ePm4Afeqmq4VKjGPF2enaeFy39zT37
C5Zz1+p5audDy8DvEtN7NnDVvfXe8H0mc35pDOgNjnrZn0eeZjbmeeHO+YV6
2+v1P5sNxZwFa0Sfgir/r96Bf8hn5Nu5X54B/r+p97BcvbwQLqvsf8R/+OLq
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
af4IzlWtvPli5riL1fQtz7H7eBhfkP920dbbROxMFym+h7Ew30G/V/YqoK+n
taivvz6G08FHlfWW0/2a/z44fHV+1pA4frq2/125P8KEWMb4jPGTZnrd6cVJ
d66fqFlquPeLPrVl7GH31HKReHWxsBzp1Xvt3fq+OAI1dl5j5jit829+9avI
mZc9a6qGf6VnbjL9bsRw9lZ+hzlo6uzEVjTw8qo7Pu95CdOne9HzWfQc40PE
LJjf/S5mp4vx1MTppecc4EWfeefZ5pepd9RTxxqC77BXLsazx9Hz4zxX2gq5
8lHmzpYm/0Mjcv+118W/H0hrSe1HOUtQrl9/ZXMP2vinbONnGeMzxk+a4bnp
7tSoq1O6u6iNp4/XS95cdbw8PpTR6R2y7noxx62Mw7tMTI/rpHkT7+AHYLC+
s09WetLQ8ImJSi4UP6sPCb2c2Thyq3qgwvRD076u746+Y+rbxO0Hr7t+9D0x
e11cvswckbQk5STkTu37eudO2qyY56LJ2au1s375dGJt/ZD0uOXLTc8tmO6b
N2q/Ir6t3rj0G/ryqcXT31CPHvw8rZ7aOvPm6v5qtvG1jPEZ4yfNYDldkl5u
ZoTCv9LE4g/ddFP0rxXny9PrDxL75qGHjqQxgtkw+IDoGbdaYLXYSxxGe+cc
9JqB53LlcBv3iosVn9mv4bmf6217U3ovfocYTX0TXf3Prrpqmc989Ic/jLo+
2mq5BXlanEC2yTG+nDVrdlLUsie/UV2HvAydCb/OuirXFI29PLueC+Yp81Pl
p8oeC/L3+H36jz3TepPv0efum//2yfB5zWmiBdR3icZjx8LPxIdlG3/LGJ8x
ftIMjp9d9PMSYzflvO2jZqvh3fX1Ui83kz6uZpGWfcNihtzr3xAYTs8Pg3cp
5s74Pzp6/c/kV80d0bdc/ZzY/5maNk5NnD2+1PjRSX/7M58NXpXeDl+LJ8g9
6ibX5F3MKFTbXva69SfuXo0k3umWFPPrg0+PCc/lqOSj9NtRP6eugx8qX1XW
fZS1F1U9ppkJZ73v/YPtxfAf/dfo7cB/sMayjbdljM8YP4kmRhGP2CP1+moz
vWTgMB7UHjiKwWWxEp7TfspHoNejl3vgxhuDu8fhm81NY0cnHTVNxXLC29PN
NRktVvRMSeevDwkeFafqXO354q5sk29q68XXYvWbjjk2/o8WDr6fWPTGpwmx
XtRUqg/RG8IatBbrfSFgPz9Tz2Y9IUtTm2cd06TQllrb3qtvL75s89cyxmeM
n0RTBySviMtu6+v22F13B47SKpudDk+bNPVthuOMWd/veW/o3eqm1klPUPxp
k+EA5OHrMTzTs+Swgl/V50R8ZUbeXeeel+fGPMdMjzt1FLgm+Rs1Inw8NZJ4
HTOU+2xRXsNX0IuHz6nuRA3GLckXPSRhu9y8fk9dffCyjZ9ljM8YP4n2nV0X
D7ZJuOjPNhMX7br66rGv6Vsjtvn2Zz/X6/3hrNmt6uX0Crli8W7LvUYsFdr5
k09ufA/6Zjn8R2r1fHwPusBd0vmb70lj//0jj4zeqNmem6Y3Lm5If2VcvfpJ
s5fw8jQe1Zi8y/gIeuXjk9RuyrsvTseZm79zcPrb/y74/mca+i5lG1/LGJ8x
fhJNnnKXhN9NM2EYfvPiLT8d/HfZz15sZP/UR3aYic3105Mvx53X++YwfoNe
NNc3/IyplcLl603G8LL6h6rpF7frMa+m7+czmDWWbXKN72jdqeugK91ttdWn
Z9J979qhv4u32mPR82ONlZqRw5OPcPKb/zr0p239I7KNr2WMzxg/iSau2Tth
pDlfv7xned353RdeGDyneFltWmlm0tLrdeGqHKe+9HLw+HjxFE183fwM/9/W
R1etvRzB7aefHvyB3Dz9nvq5/dZcK2K2tj542bLxIe8+7/zQytGe7Lv2OlF3
12S/f/LJwVV77hX6UtyV2gy5fD4mLsnsJO+XbfIsY3zG+Ek0OUb157svWBD5
yrrpHwNLL99+h2V6xuhFgnc376OtVt5sO3lNNes0+/wIPWzqhhdQP++zmkyN
3AFrrRMaefPE1CuL3cVk6qTyfLhsfezXP/tZ9FvaN/mFu6f1c9xGG0cf5zIm
v++yyyJnJHanHeETnP+J/x3+Ja6f7jT3VphcyxifMX4SzWxNmjVaYfVs4mxa
IrXGNMj6d5q1+VADjtPhmxd3etoD9SGp2hPpZ9/aepuoR2Z4U7o6mqi6+Sw8
vqNqdNHq5tQmbZf8DDX1NIKw/suvfV3MFsmWbVTDR+lxQxt/kNl2Ka7XB1n+
6bbTT481T3ui37F+Dp9La0+N3CBvbxNtGeMzxk+i4cjVrOsPBuPNYdMflFbp
2BS77LZgjch9t5nYnoad9pgOSV0S01skYvgUOzHaO/1r5DLrJg4X35/ylrdO
v+fTTw+uO+SQ0DrpPasHnhmzR730ZaGZ198kz/LMNhv75V13R65JL1r8Ox4e
3sN5/FA5c3j/tdYOjOev9plrm218LWN8xvhJNHwkXhJnSff+4E03DX561VXR
p2ZxEcN0ae5Lw7fLvcN6eXXcvr2zamJ9ef0mo82D5frXOSe9QvUGxzP84s47
B7edeeZgp3Q+e6f/Gza7Nlu2PibHhIvX90Yt6F3nfzP6IsrZ45/Ux9OQwPez
aE96aPWyja9ljM8YP2kmBj/zH94TtW0XfmrL6O/B9LBVOyRHLq65MMX6fXCV
xs6sbb1p99RfPsVBOE78J95fDZ65s6XRy8N2fUL1KqFzMg9WDPXNj3086urN
hae1k0vYWc/5N//1cv1KsmWbqVljuHn9IehL+aXieRiv96O1qS8D3zf3uZls
yxifMX7S7MmHH44e8OrSxfD07/rW4sLx4nedd370jxXPfLdjzlzVfnXffcH9
77ZgQeQ71a3rU6936GExT+b54TuckP59/CtfFbyoeF2+XW868+/uTHFVObNG
P1s9x/2e87HX5r602ebS+KDy79a5echmw+/Az0wxfsb1545ljM8YP2lGr04H
J59+2ymnRn5SLv7oP/uL0BCXPT708rb3icWH2U3HHhd9589OvoPeNfp96hEO
1w9ed73gQdUb8wPk6/EH1+5/wOCaffaNHuHXF/VzcvRmhvED7Ll3nHXWCr0X
2Z7bRnOvbh6vBPMPTP6oHFbuc/PcsYzxGeMnzfQHOfktb41esfdefnnkIsXc
1x9ySPQFLc3ceJy9mLrL6NxxAGJ2M+NLm/rd7yLfCe+Pe8UrY5ad99Sn7rfF
5+Df6Z/4CGba/fDUU6P/rfNp0uJny7YiDae1/5pr51kzzyHLGJ8xftLs9hQb
n/HOLaJWDqbusNpqEcurfa+b3t14/Tbu0vy3K3bZJeL1byd8p5Wrm142533s
44MfnXPOcj9TQy93jzPw89M33zxy8N/44AcHzyYfIVu2lWn0eOf+rw8P7vz6
11f1qWRbSZYxPmP8pJneHzCUrlgd+jZFjVCT6Wd30hv/Kurhm4yPYFYXnlN9
XDn7q2r6zdMxNf0MV2oG3olvenNooA5eZ92I4/PM92yryvR4eCr3T3zOWMb4
jPGTZuZtyMfj1S9I+LrHGgsHp79ri8Ejt9663Gvp2+8+/5uD8z7y0cDzqunt
ef7HPxG96MU/5rl7bd3MjFWP39TnXg96+Xjz4+H7oev9ceTzs2XLlm1lWMb4
jPGTZmrnvvGhDw2O2/QvY9aGmje1ade39I1nZm7jMH940h9mxJnbrqZdTh23
qXdN04x5/XF8ntr7unm9/rRmf5gRe2NDz9ts2bJlW1GWMT5j/CQa7lw9utp0
s93hr351es21GX2eXjf0+PrNwfcyx/7jiy6KHqDq3+qGN6Cjl5MvDRdPd0/L
ry++GP6SbbcNnV62bNmyrSzLGJ8xfhKNzk09m552Nx//5egDIkffNmemNL3w
5N1hs15gpel3p674pqOPWe539LOlyzPLy0KhoTenxjycHQt8F7//+uc/n+Or
zJYtW7ZuyxifMX4S7bIddwx8P/qlL4v4HN9udnafejW9a7dM2Kwv2EUpPr/9
jDMGv/jRj2JujN70TWZOp9mw8v9y7mrlzYk16+uHp5ySNfTZsmVbJZYxPmP8
JJr5sDs9b7Xg7NW/MXG4OveufnIPXH9DzHg9fMOXRo59zxSLm/uqh87xr3hl
1NDR3amFV3cH0827OeblGwcnr2etOTg0dmVPvWzZsmVbVZYxPmP8JJrct5o5
deml0bOrg2vreaPmTt5e/TqdvXp6NXMXf/rfB0dt+CfRk3a3IsevR+32RZ9a
/er2TZiup62+4GbIiel/8q1vrazLzZYtW7ZGyxifMX4SzSyOrRMGX733kmX+
X+87cXa9B4ge9/h9s97VwekHVrWfXXVV9K/RY15N3mU77Rz9cPTUM1NOLf6J
b3hT5OGP3Wjj0Olny5Yt26q2jPEZ4yfR9KT7fMJ4c97q/eh/cMop0fdO/xtm
fra57rR29156afTLuWa//Zd7T5iuvq5u6ujNsNt59QWDfRctCr4/W7Zs2eaD
ZYzPGD+Jdt6HPxI16Ue84EWDH5x40jI/Uz939ZJ9Il7/9f33R+/uryfMN7vj
4VtuGZzzgQ8Obj/zzGV+h3ae3+B3SqPj+/5RRw+O3/QVg12SP7Fnwne5fPX5
2bJlyzYfLGN8xvhJs9889ovQ0JsBS9cux/5EMdO1NP3pr9h11+hrr0auzJ3T
wOubU+91o1/dNxO+8w3Yjy+4MGZ2ysXT73svvWzxBnkOfLZs2eaLZYzPGD9p
Zk6cXjZmuF/yuc8Fv97UZ/aOFKvj8/deuChm0tHYieXP2PydgzvOPnuZ1+L7
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
8Lt5b8c70w9KKaXUhJdMux3ObZm7h384iIe4iI84iZe4eS0cvVR2IXzlHBve
DszTm7t8X7bfrovxd6XzczZkvr7wc3ns3a/G8ub34Zw1n7Pnua6Y36PPfMP7
5uf8eAfO1X1uPifBPT5fxXt+bf5bevSNUkopNeEl0/AN5/AO9/APB/EQF/ER
J/ESN/ETR/EUVzesHsMfLepz8W3z9OncXNta/LZ9d23z9Vbvr+db4nHzdfmn
zO+2PRfPxZ08PfP1BPYNsD+Qc3UfxvvcinfjPt5P4l3p06zPlFJKqQkrdyzZ
hnN4h3u3zO+Lw0POx+EjTuJlz9xPHD1n7iq+4ize4i7+4nDbPH3rfru58q/L
fH02lk/34bAuwO/QMYdwMtYM+O5g3p51BPYL8E3yhvn3Cef5ubeH+Ygb8X43
zb9h+J3cD3hvpZRSapJLpoVvN8O7G+Hfu+Hh2+HjlfDypfDzbOGengxfV8Lb
dO9NNYa3DvP0c/FXdJivt7gPx3wdgLvwmTPgTpxj8Rx8b3CfLusH58suxjMz
73A5vlFej3d6q/Df07ka70nXst5RSimlJqzcsWTb1fCO35fBPxzsmbuIjziJ
l+fDzw1zT3EVXx8Lb/ltuLQOv6/oME/fYnyXsXzaY8+6P3v4cZ7fs+WOvTXz
M3XPxLNyro97cph7eNH83t2X470428+3yyvR5axXlVJKqQkrdyzZhnN4h3v4
h4N4iIv4+DxextidM3Jr4Snjd3zF2cWi3kvfaQzf0fhqXd7it2bjvztf+G/d
HIz/L98XzCOwXsC+AL491uNZN8rOmN/Dxzw+5jPG3zT//Xne70J0USmllJqS
km04h3e4h384iIe4iI8b5l7iJn4eN/d0OXytfA93583PuuW/JTvsjvpRxg84
b/W9d9Xv1DScZ/6AdQL2A/DN8UQ8I/sETsRzs67A+P7peB/2EpyO75YzLT2r
lFJKTVjbPAvnTkcb4SCm4yI+4iRe4iZ+4iie4urhhu/7LHy3wTn61rvt5rK/
IWP5/py9Ndbmk/Pme/zYy38kvjkq6wu/j4e5Bu7XfTLmHlYL//3bE9FatK6U
UkpNWcm4yrzwbzU85Pdl8HElvKxsD0fZP4+rD+e+N9bg8zn6oWP4rmP5oj5L
l4/nWRdg/Z/99sn6RfPvD9YQ8H45nv2o+fwD8a2yEh1TSimlprRkHe4lA/EQ
F/ERJ/ESN/Gzst3c1QfC2f74vRg8K9dpDD+O8zY4b8/6/P74xliw2vpDVnt/
JJ59Kb5PuPP+UYp3U0oppaa2zLxHwsGlCB+T67iZbF+IuXLOwPfX360ev4/t
+39xvvB9ffdabX0a1yfvD5jPNRy02v3U4UaLSiml1JTUNC7371C4iOk4Wblu
MW5Pthd+zyzn2vbE9xbjRzqf5u7jGapxvfkc/v54Tsb3yfyFWFd4MNbxH1JK
KaVmoYZ/C1abPp+5zpx8NW5PtoeznXzvYnwH54dab5n3aXwf8dzJ/tT9Siml
1IzU9y+ZmIws3Mu+6zvYvivfx3Q+34/X977Ixvcp83F+v8LnIJRSSqmpr8XA
3Me0ly53Pbd9T33v4Pww6+/Oni2t2/fdb5a+V5RSSqlpbYSBych7ikHXR9m+
J76PcH6Y9bn3ufnb7FdKKaVmvKaRuZ+5q0NtL3bp+5jWN71vc18ppZRSdW1u
Nm29Y7Z3tL7N+y7+K6WUUrPYTma2WnunbB/D+nHtV0oppWa1Tpb+X7bv0nul
lFJKdWgvfP4XmNPkOQ==
    "], {{0, 366}, {505, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{505, 366},
  PlotRange->{{0, 505}, {0, 366}}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnUFu00AYRiNgwTW4Bjs4QjlBK5EtUkFCPQD7nqCnqHIX1GsgsUEyTpwm
M/PP53hmEtczfU8pqh1nxv83r7Zj4vjDzber9ZvVavX9ff/P1fXPT7e313df
3vUTn+9+fL152//yq/957H+2v3cAAAAAAAAAAAAAAJDIZr06st6cXPjj/VNB
R6c6uHALflMJhXdltVfI0/1HL5bN/Yni0/IZWXpiQxcbj60bx8K3Uyf7eV1u
bNVIK7dRNyYl8brcCBNy5zsxbIPbLzU8sdvc7HDDOm6mt3PtrurQqHkq3t1I
C8cFIzuF4fWHJ+PjGXHDK/HkE27vzmw/hIy/vuUwFGjWfiwfZ3lnl+SGcNgz
+c14U3rC7W6kBX936E55Nam9heeGN4KT3AhfMSxjQ6jZjS3PfwBqGEM33A3N
oXZ3QLt4M2d1w2zgj6/yxyO6YsFGyWtpihuRTch2IdFX9QxhJW5XnRl7w7xo
LudGZGforYm/h4n85ToNBG1NqD18k3MoPBZCGxxjzHDjsKSTTR1u2Ikpbujx
b1OQQ81mSNQ+JZKSMxh5brhtqhbsiPv7lDQ3/AOFkdpl7yG1H2fsKgiO1Z14
/cPP2IR7oLdZP8+URyehDvEjSdtDvAX/PJg7FhluuKWM1S57X+83t2EIFTsS
7DjDsPYzw+3q5vjuzR9ec2T3PDeyMfKeUt2NtuC9hxX7pMluDI2FxxO29thb
9pW7PbFzKnUDAAAAAAAAoA4eoV3+/P1X6EbfAo/2Hudyo6QFWCa4AQrcAAVu
gAI3QIEboMANUOAGKHADFLgBCtwAxaXdeFgwJVWn8tK1jqHWeQY3utUq6dG/
5Hcieb2UVJ3KbEXl9CLAjXnAjWgm7bmR8R0auBHNpD03zDcVnQY3opk06EYX
Xq94EtyIZlK3G7FvQlBXeI6AG9FM2nZj4pEHbkQzqdsNxc6Z6UekuBHNpEU3
Jn1dZJDDPEXl9CLAjQzGv3FH5TBPUTm9CHBjHnAjmgludLghMsGNDjdEJrjR
4YbIBDc63BCZ4EaHGyKTxVJSdSovXesYap35TCAocAMUuAEK3AAFboACN0CB
G6BY5vmNkvVZJjXmcFE3HtJP042fqauUh/QznPOfubXgxgzghgU3BnDD0qob
qde14YalVTdSr2vDDUuzbnRp17XhhqUFN85xXRtuWF6DG1OOPHDD0oIbipTr
2nDD0q4bade14YalVTdSr2vDDUurbqSCGxbcGMANC24M4IYFNwZww4IbA7hh
wY0B3LDkfdjpxTM5O5XmwOdFQYEboMANUOAGKHADFLgBCtwABde1geLS575q
PB94CbJPf82AWmfcmIeMKB6yvtjtjP9DgRvzgBvlgVThRt792nCjMJAq3Mi7
XxtuFAZShxtdzv3acKMwkMW5cb77teFGYSDVuTH9fm24URjI4txQpN+vDTcK
A6nEjZz7teFGYSBVuJF3vzbcKAykCjcywI3yQHADN3ADN3BjADfKA8EN3MAN
3MijZH2WSXYUM6DWmc+LggI3QIEboMANUOAGKHADFLgBCtwABW6AAjdAcRY3
oFUK3ehfzqPhR4kbAAAAAAAAAAAANfIfRwBYtA==
    "], {{0, 133}, {180, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{142., Automatic},
  ImageSizeRaw->{180, 133},
  PlotRange->{{0, 180}, {0, 133}}]], "Input"],

Cell["\<\
The network nodes created by rule 3 of the rule set:  \
{2,5,18,49,106,197,330,513}\
\>", "Text",
 CellChangeTimes->{{3.6632782876279335`*^9, 3.6632782983083735`*^9}, {
   3.663278338718077*^9, 3.6632783701948223`*^9}, 3.663278486358943*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<: \>\""}]}], "]"}],
         "&"}], " ", "@", " ", 
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2", ",", "5", ",", "18", ",", "49", ",", "106", ",", "197", ",", 
           "330", ",", "513"}], "}"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "\[Rule]", "Yellow"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "\[Rule]", "Green"}], 
        "}"}]}], "}"}]}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", "\"\<Subsection\>\""}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{3.6632773426096463`*^9}],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"0: \"\>", "2", "5", "18", "49", "106", "197", "330", "513"},
     {"\<\"1: \"\>", "3", "13", "31", "57", "91", "133", "183", ""},
     {"\<\"2: \"\>", "10", "18", "26", "34", "42", "50", "", ""},
     {"\<\"3: \"\>", "8", "8", "8", "8", "8", "", "", ""}
    },
    AutoDelete->False,
    GridBoxBackground->{
     "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> RGBColor[1, 1, 0]}, 
      "ItemsIndexed" -> {{{-1, -1}, {1, 1}} -> RGBColor[0, 1, 0]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"], "Subsection",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.6632773452972836`*^9}]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["n-dimensional network:", "Subchapter",
 CellChangeTimes->{{3.6324029543735123`*^9, 3.632403001557906*^9}, {
  3.6632663458947487`*^9, 3.663266352919851*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Differences become constant in the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " row, and are then 0 for later rows.\nCompare to taking derivatives of \
polynomials:  each further derivative has a lower degree until one is a \
constant, and further derivatives are 0. "
}], "Subsubsection",
 CellChangeTimes->{{3.6294832226247377`*^9, 3.629483322518273*^9}, {
  3.663266423005781*^9, 3.6632665220036097`*^9}}],

Cell[TextData[{
 "The index of the constant row (if there is one) indicates the rate of \
growth of the original data.  (Similarly, the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " derivative of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "x", ")"}], "=", 
    SuperscriptBox["x", "n"]}], TraditionalForm]]],
 " is a constant.)"
}], "Text",
 CellChangeTimes->{{3.6299636290394993`*^9, 3.629963693789898*^9}, {
   3.6299637501148596`*^9, 3.629963836317324*^9}, 3.6299638704033966`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"myGrid", ",", "finddev", ",", "findslope"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"myGrid", "[", 
    RowBox[{"d_", ",", 
     RowBox[{"r_:", "1"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"(", 
    RowBox[{"TraditionalForm", "@", 
     RowBox[{"TableForm", "[", 
      RowBox[{
       RowBox[{"MapAt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", 
            RowBox[{"Background", "\[Rule]", "Yellow"}]}], "]"}], "&"}], ",", 
         "d", ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "All"}], "}"}]}], "]"}], ",", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ToString", "[", "#", "]"}], "<>", "\"\<: \>\""}], "&"}],
            "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"Length", "[", "d", "]"}], "]"}], "-", "1"}], ")"}]}], 
          ",", "None"}], "}"}]}]}], "]"}]}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"finddev", "[", "l0_List", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", "=", 
       RowBox[{"l0", "/.", " ", 
        RowBox[{"\[Infinity]", "\[Rule]", 
         RowBox[{"Sequence", "[", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "l", "]"}], ">", "1"}], ",", 
       RowBox[{"N", "@", 
        RowBox[{"StandardDeviation", "[", "l", "]"}]}], ",", "\"\<\>\""}], 
      "]"}]}], "]"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"findslope", "[", "l_List", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"findslope", "[", "l", "]"}], "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "b", ",", "x"}], "}"}], ",", 
      RowBox[{"m", "/.", 
       RowBox[{"FindFit", "[", 
        RowBox[{
         RowBox[{"l", "/.", 
          RowBox[{"\[Infinity]", "\[Rule]", 
           RowBox[{"Sequence", "[", "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"m", " ", "x"}], " ", "+", "b"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "b"}], "}"}], ",", "x"}], "]"}]}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"FixedPointList", "[", 
       RowBox[{"Differences", ",", 
        RowBox[{"data", "=", 
         RowBox[{
          RowBox[{"Range", "[", "8", "]"}], "^", "n"}]}]}], "]"}], ",", 
      RowBox[{"-", "2"}]}], "]"}], "     ", "//", 
    RowBox[{
     RowBox[{"myGrid", "[", 
      RowBox[{"#", ",", 
       RowBox[{"n", "+", "1"}]}], "]"}], "&"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "3"}], "}"}], ",", "1", ",", "6", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.625757984140566*^9, 3.625758013876383*^9}, 
   3.625758057861044*^9, {3.625758170996664*^9, 3.625758307546912*^9}, {
   3.6257583411892366`*^9, 3.6257583743126035`*^9}, 3.6257586965318823`*^9, {
   3.6257592818906574`*^9, 3.6257592847097797`*^9}, {3.6257594365208855`*^9, 
   3.6257594393141384`*^9}, {3.625759499567829*^9, 3.6257595102366905`*^9}, {
   3.6257608616580014`*^9, 3.625760889179695*^9}, {3.6294833507735376`*^9, 
   3.629483370530121*^9}, {3.6294834725484257`*^9, 3.6294835058145294`*^9}, {
   3.6299633268180885`*^9, 3.6299633287556915`*^9}, 3.663266399317306*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 3}, 1, 6, 1}}, Typeset`size$$ = {
    400., {54., 61.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$15371$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$15371$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`myGrid[#, $CellContext`n$$ + 1]& )[
        Drop[
         FixedPointList[
         Differences, $CellContext`data = Range[8]^$CellContext`n$$], -2]], 
      "Specifications" :> {{{$CellContext`n$$, 3}, 1, 6, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{451., {104., 111.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.625737481054163*^9, 3.6257374902421255`*^9}, {
   3.6257379569884*^9, 3.625737961422598*^9}, {3.625738019816157*^9, 
   3.625738051000839*^9}, {3.6257385930535827`*^9, 3.625738647425505*^9}, {
   3.625739187345011*^9, 3.6257392046740103`*^9}, {3.625739280821037*^9, 
   3.6257393490479765`*^9}, 3.6257396790476627`*^9, 3.625739744939392*^9, 
   3.6257397809924746`*^9, {3.625739824048873*^9, 3.625739837049523*^9}, 
   3.6257399096170206`*^9, 3.625739942720692*^9, 3.625740004201685*^9, 
   3.625740046892355*^9, {3.6257552418898387`*^9, 3.6257552444283977`*^9}, 
   3.625757997938079*^9, 3.6257580673302402`*^9, 3.625758201175038*^9, {
   3.625758278330826*^9, 3.6257583111564713`*^9}, 3.6257586985788527`*^9, {
   3.6257587406197767`*^9, 3.6257587496108837`*^9}, 3.625759329547827*^9, 
   3.6257594429549074`*^9, 3.625759512783693*^9, {3.6257608643632545`*^9, 
   3.62576091503802*^9}, 3.625864435060643*^9, 3.625870451181857*^9, 
   3.629326475126748*^9, 3.6294835266575513`*^9, 3.629963174613428*^9, 
   3.629963238129635*^9, {3.6299635649583488`*^9, 3.6299635740065036`*^9}, 
   3.629963608194643*^9, {3.6299638922795444`*^9, 3.6299639504324155`*^9}, 
   3.663266544507682*^9, 3.663278576783193*^9}]
}, {2}]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exponential network:", "Subchapter",
 CellChangeTimes->{{3.6324029543735123`*^9, 3.632403001557906*^9}, {
  3.6632663458947487`*^9, 3.663266352919851*^9}, {3.6632666142382984`*^9, 
  3.6632666196604404`*^9}, {3.663267159079893*^9, 3.663267163917677*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Round", "[", " ", 
        RowBox[{"n", ",", ".1"}], "]"}], "\[Equal]", 
       RowBox[{"Round", "[", " ", 
        RowBox[{"n", ",", "1"}], "]"}]}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Round", "[", 
        RowBox[{"n", ",", "1"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"diffs", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"FixedPointList", "[", 
        RowBox[{"Differences", ",", 
         RowBox[{"data", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"round", ",", 
              RowBox[{"Round", "[", "#", "]"}], ",", "#"}], "]"}], "&"}], " ",
            "[", "\[IndentingNewLine]", 
           RowBox[{"Switch", "[", 
            RowBox[{"type", ",", "polynomial", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Range", "[", "12", "]"}], "^", "n"}], "+", 
              RowBox[{
               RowBox[{"Boole", "[", "jitter", "]"}], "*", 
               RowBox[{"RandomReal", "[", "]"}], "*", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"n", ">", "3"}], ",", 
                 RowBox[{
                  RowBox[{"Range", "[", "12", "]"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"n", "-", "2"}], ")"}]}], ",", "1"}], "]"}]}]}], 
             ",", "exponential", ",", 
             RowBox[{
              RowBox[{"n", "^", 
               RowBox[{"Range", "[", "12", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Range", "[", "12", "]"}], "^", "3"}]}]}], "]"}], 
           "]"}]}]}], "]"}], ",", 
       RowBox[{"-", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Off", "[", 
     RowBox[{
      RowBox[{"Divide", "::", "infy"}], ",", 
      RowBox[{"Divide", "::", "indet"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ratios", "=", 
     RowBox[{"N", " ", "/@", " ", 
      RowBox[{"Ratios", " ", "/@", " ", "diffs"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"On", "[", 
     RowBox[{
      RowBox[{"Divide", "::", "infy"}], ",", 
      RowBox[{"Divide", "::", "indet"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"myGrid", " ", "[", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"IntegerPart", "[", "n", "]"}], "+", "1"}]}], "]"}], "&"}],
        " ", "/@", " ", 
       RowBox[{"{", 
        RowBox[{"diffs", ",", "ratios"}], "}"}]}], ",", 
      RowBox[{"Spacings", "\[Rule]", "2"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "3"}], "}"}], ",", "1", ",", "6", ",", ".1", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{"jitter", ",", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{"round", ",", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{"type", ",", 
          RowBox[{"{", 
           RowBox[{"exponential", ",", "polynomial"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Spacer", "[", "10", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6257373120680804`*^9, 3.6257373325323534`*^9}, {
   3.6257374767570696`*^9, 3.6257374889764614`*^9}, {3.625737955347722*^9, 
   3.6257380736786904`*^9}, {3.6257385911591096`*^9, 3.625738645987937*^9}, {
   3.6257391763757057`*^9, 3.6257392014551086`*^9}, {3.625739256835457*^9, 
   3.625739348188992*^9}, {3.6257396726879735`*^9, 3.625739678110116*^9}, {
   3.6257399656593423`*^9, 3.6257400458298244`*^9}, {3.6257567822626486`*^9, 
   3.6257569255643315`*^9}, {3.6257574970526066`*^9, 3.625757543312219*^9}, {
   3.6257576064062176`*^9, 3.6257576959074373`*^9}, 3.625758110296857*^9, {
   3.6257584988527217`*^9, 3.6257585313216715`*^9}, {3.625758562611297*^9, 
   3.625758574330619*^9}, {3.625758612473158*^9, 3.6257586331102257`*^9}, {
   3.62575897450372*^9, 3.625759007469922*^9}, {3.6257590404854574`*^9, 
   3.6257590487397575`*^9}, {3.625759174913289*^9, 3.625759175069539*^9}, {
   3.625759216986166*^9, 3.6257592539845743`*^9}, 3.6257593772401447`*^9, {
   3.625759924288197*^9, 3.6257602010166163`*^9}, {3.625760293939587*^9, 
   3.6257602955646753`*^9}, {3.625760338985385*^9, 3.625760339579158*^9}, {
   3.6257608063760977`*^9, 3.625760853438836*^9}, {3.625761101970558*^9, 
   3.6257611234548855`*^9}, {3.6257611545003395`*^9, 
   3.6257611563432813`*^9}, {3.6257612510544147`*^9, 3.625761269352214*^9}, {
   3.6257613053659196`*^9, 3.6257613721570067`*^9}, {3.6257615148203936`*^9, 
   3.6257615792367744`*^9}, {3.6257616186259775`*^9, 3.625761627501421*^9}, {
   3.625761800531499*^9, 3.6257618038441706`*^9}, {3.625761996423222*^9, 
   3.625762025110505*^9}, {3.6257620914864006`*^9, 3.6257620965022764`*^9}, {
   3.625762213997575*^9, 3.6257622186615963`*^9}, {3.6257701685037594`*^9, 
   3.6257703312113333`*^9}, {3.625770433662583*^9, 3.625770453486684*^9}, {
   3.625770493314308*^9, 3.625770605565909*^9}, {3.625770639595649*^9, 
   3.6257707075484757`*^9}, {3.6257719024442873`*^9, 3.62577190981966*^9}, 
   3.6257719829747458`*^9, {3.6257721776583395`*^9, 3.6257721920340776`*^9}, {
   3.6257722280650487`*^9, 3.6257722412688475`*^9}, {3.6257723010001373`*^9, 
   3.6257723026007175`*^9}, {3.6257727691294823`*^9, 
   3.6257727721765184`*^9}, {3.625772849031654*^9, 3.625772869157677*^9}, 
   3.625772981955254*^9, 3.62577306309564*^9, {3.6257731962003956`*^9, 
   3.625773219812833*^9}, 3.6257732728591194`*^9, {3.625773313423891*^9, 
   3.625773325446443*^9}, {3.6257754603135386`*^9, 3.625775868424395*^9}, {
   3.625776034516344*^9, 3.6257761115612984`*^9}, {3.6257762134608936`*^9, 
   3.6257762330488386`*^9}, {3.625777895968621*^9, 3.6257779742346897`*^9}, {
   3.625826125349148*^9, 3.625826147583126*^9}, {3.6259696815260878`*^9, 
   3.6259696831355343`*^9}, {3.6263877086960397`*^9, 3.626387730478362*^9}, {
   3.6263878586991653`*^9, 3.6263878907116137`*^9}, {3.6263879476029806`*^9, 
   3.626387952227283*^9}, {3.6294836047995515`*^9, 3.6294836121587367`*^9}, {
   3.629483647312784*^9, 3.629483718176751*^9}, {3.6299653858333635`*^9, 
   3.6299654211822996`*^9}, 3.6299655106139016`*^9, {3.629966793896083*^9, 
   3.6299668505512114`*^9}, {3.66326687899858*^9, 3.6632668968202176`*^9}, {
   3.663266943377488*^9, 3.6632670082977743`*^9}, {3.66326910224479*^9, 
   3.663269105409557*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`jitter$$ = True, $CellContext`n$$ = 
    2.5, $CellContext`round$$ = 
    True, $CellContext`type$$ = $CellContext`polynomial, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 3}, 1, 6, 0.1}, {
      Hold[$CellContext`jitter$$], {False, True}}, {
      Hold[$CellContext`round$$], {False, True}}, {
      Hold[$CellContext`type$$], {$CellContext`exponential, \
$CellContext`polynomial}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}, 
        Spacer[10]]], Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    1150., {184.5, 191.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$688627$$ = 
    0, $CellContext`jitter$688628$$ = False, $CellContext`round$688629$$ = 
    False, $CellContext`type$688630$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`jitter$$ = False, $CellContext`n$$ = 
        3, $CellContext`round$$ = 
        False, $CellContext`type$$ = $CellContext`exponential}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$688627$$, 0], 
        Hold[$CellContext`jitter$$, $CellContext`jitter$688628$$, False], 
        Hold[$CellContext`round$$, $CellContext`round$688629$$, False], 
        Hold[$CellContext`type$$, $CellContext`type$688630$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (
       If[
        Round[$CellContext`n$$, 0.1] == 
         Round[$CellContext`n$$, 1], $CellContext`n$$ = 
         Round[$CellContext`n$$, 1]]; $CellContext`diffs = Drop[
          FixedPointList[
          Differences, $CellContext`data = (If[$CellContext`round$$, 
             Round[#], #]& )[
             
             Switch[$CellContext`type$$, $CellContext`polynomial, 
              Range[12]^$CellContext`n$$ + (Boole[$CellContext`jitter$$] 
                RandomReal[]) 
               If[$CellContext`n$$ > 3, Range[12]^($CellContext`n$$ - 2), 
                 1], $CellContext`exponential, $CellContext`n$$^Range[12] + 
              Range[12]^3]]], -2]; Off[
         MessageName[Divide, "infy"], 
         MessageName[Divide, "indet"]]; $CellContext`ratios = Map[N, 
          Map[Ratios, $CellContext`diffs]]; On[
         MessageName[Divide, "infy"], 
         MessageName[Divide, "indet"]]; Column[
         Map[$CellContext`myGrid[#, IntegerPart[$CellContext`n$$] + 
           1]& , {$CellContext`diffs, $CellContext`ratios}], Spacings -> 2]), 
      "Specifications" :> {{{$CellContext`n$$, 3}, 1, 6, 0.1, Appearance -> 
         "Open", ControlPlacement -> 1}, {$CellContext`jitter$$, {
         False, True}, ControlPlacement -> 2}, {$CellContext`round$$, {
         False, True}, ControlPlacement -> 
         3}, {$CellContext`type$$, {$CellContext`exponential, \
$CellContext`polynomial}, ControlPlacement -> 4}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}, 
         Spacer[10]]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1201., {251., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.663267044080041*^9, 3.663269109532486*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["diffs"], "Input",
 CellChangeTimes->{{3.664469895752095*^9, 3.664469897299041*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "6", ",", "16", ",", "32", ",", "56", ",", "88", ",", "130", 
     ",", "181", ",", "243", ",", "316", ",", "401", ",", "499"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "10", ",", "16", ",", "24", ",", "32", ",", "42", ",", "51", 
     ",", "62", ",", "73", ",", "85", ",", "98"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "6", ",", "8", ",", "8", ",", "10", ",", "9", ",", "11", ",", 
     "11", ",", "12", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "0", ",", "2", ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"-", "3"}], ",", "3", ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "4", ",", 
     RowBox[{"-", "5"}], ",", "6", ",", 
     RowBox[{"-", "5"}], ",", "3", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", 
     RowBox[{"-", "9"}], ",", "11", ",", 
     RowBox[{"-", "11"}], ",", "8", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "16"}], ",", "20", ",", 
     RowBox[{"-", "22"}], ",", "19", ",", 
     RowBox[{"-", "12"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", 
     RowBox[{"-", "42"}], ",", "41", ",", 
     RowBox[{"-", "31"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "78"}], ",", "83", ",", 
     RowBox[{"-", "72"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161", ",", 
     RowBox[{"-", "155"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "316"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.66446989789282*^9, 3.6644699414866858`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Split", "[", 
     RowBox[{"#", ",", "Less"}], "]"}], "&"}], " ", "/@", " ", "diffs"}], " ",
   "//", " ", "Column"}]], "Input",
 CellChangeTimes->{{3.664469959112968*^9, 3.66446996484466*^9}, {
  3.6644700904718804`*^9, 3.6644701228713675`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "6", ",", "16", ",", "32", ",", "56", ",", "88", ",", "130", 
        ",", "181", ",", "243", ",", "316", ",", "401", ",", "499"}], "}"}], 
      "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "5", ",", "10", ",", "16", ",", "24", ",", "32", ",", "42", ",", "51", 
        ",", "62", ",", "73", ",", "85", ",", "98"}], "}"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "6", ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"11", ",", "12", ",", "13"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", "0", "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "6"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "5"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "1"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "7", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "9"}], ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "11"}], ",", "8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "4"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "16"}], ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "22"}], ",", "19"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "12"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "36", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "42"}], ",", "41"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "31"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "78"}], ",", "83"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "72"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "161", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"-", "155"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"-", "316"}], "}"}], "}"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.664470104554931*^9, 3.6644701234807725`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Things we\[CloseCurlyQuote]re trying:", "Subchapter",
 CellChangeTimes->{{3.6324029543735123`*^9, 3.632403001557906*^9}, {
  3.6632663458947487`*^9, 3.663266352919851*^9}, {3.6632666142382984`*^9, 
  3.6632666196604404`*^9}, {3.663267159079893*^9, 3.663267188005196*^9}}],

Cell["\<\
In the difference table, is there a constant row?
If not, are all rows increasing until at some point a row is decreasing?
If so, can the fractional dimension be calculated from the slant of that row \
compared to the previous one?
How can initial irregularities of Sessie networks be ignored while still \
correctly identifying the dimension?\
\>", "Subsection",
 CellChangeTimes->{{3.6632672192723975`*^9, 3.663267389750761*^9}, {
  3.663267438555698*^9, 3.6632675448375273`*^9}}],

Cell["\<\
In the ratio of differences table, do the rows become constant?
If not, are all rows increasing until at some point a row is nearly constant? \
 (Beware fluctuations in further rows!)\
\>", "Subsection",
 CellChangeTimes->{{3.6632672192723975`*^9, 3.663267412023368*^9}, {
  3.6632675591440625`*^9, 3.6632675674701014`*^9}, {3.663267605996112*^9, 
  3.663267644803342*^9}}],

Cell["\<\
How to identify other behavior, factorials or Fibonacci numbers or ... ?\
\>", "Subsection",
 CellChangeTimes->{{3.6632672192723975`*^9, 3.663267412023368*^9}, {
  3.6632675591440625`*^9, 3.6632675674701014`*^9}, {3.663267605996112*^9, 
  3.6632676823325157`*^9}}],

Cell["Much more to do!", "Subsection",
 CellChangeTimes->{{3.6632672192723975`*^9, 3.663267412023368*^9}, {
  3.6632675591440625`*^9, 3.6632675674701014`*^9}, {3.663267605996112*^9, 
  3.6632676823325157`*^9}, {3.663269136191149*^9, 3.663269141615484*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1260, 678},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowStatusArea->"DimensionExamples2.nb last backed up to \
DimensionExamples2.nb~ on Sun 31 Jan 2016 at 8:22:56 PM",
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 137, 1, 101, "Title"],
Cell[CellGroupData[{
Cell[742, 27, 155, 2, 67, "Subchapter"],
Cell[CellGroupData[{
Cell[922, 33, 7573, 167, 312, "Input"],
Cell[8498, 202, 4331, 90, 368, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[12863, 297, 1302, 30, 72, "Input"],
Cell[14168, 329, 620, 10, 31, "Output"],
Cell[14791, 341, 621, 10, 31, "Output"],
Cell[15415, 353, 1227, 26, 50, "Output"]
}, {4}]],
Cell[16654, 382, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[16782, 387, 2001, 50, 52, "Input"],
Cell[18786, 439, 885, 18, 63, "Output"]
}, {2}]],
Cell[19683, 460, 125, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[19833, 465, 7988, 183, 312, "Input"],
Cell[27824, 650, 4208, 93, 368, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[32066, 748, 1726, 45, 72, "Input"],
Cell[33795, 795, 780, 12, 31, "Output"],
Cell[34578, 809, 465, 8, 31, "Output"],
Cell[35046, 819, 1301, 26, 50, "Output"]
}, {4}]],
Cell[36359, 848, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[36487, 853, 1936, 49, 52, "Input"],
Cell[38426, 904, 824, 18, 63, "Output"]
}, {2}]],
Cell[39262, 925, 215, 4, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39514, 934, 104, 1, 67, "Subchapter"],
Cell[CellGroupData[{
Cell[39643, 939, 6664, 158, 481, "Input"],
Cell[46310, 1099, 3560, 82, 476, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[49904, 1186, 1421, 38, 72, "Input"],
Cell[51328, 1226, 675, 11, 31, "Output"],
Cell[52006, 1239, 304, 6, 31, "Output"],
Cell[52313, 1247, 1164, 24, 50, "Output"]
}, {4}]],
Cell[53489, 1274, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[53617, 1279, 1947, 49, 52, "Input"],
Cell[55567, 1330, 650, 14, 90, "Output"]
}, {2}]],
Cell[56229, 1347, 221, 3, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56487, 1355, 102, 1, 67, "Subchapter"],
Cell[CellGroupData[{
Cell[56614, 1360, 7566, 165, 481, "Input"],
Cell[64183, 1527, 3971, 87, 536, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[68188, 1619, 1553, 40, 72, "Input"],
Cell[69744, 1661, 3182, 43, 132, "Output"],
Cell[72929, 1706, 225, 5, 31, "Output"],
Cell[73157, 1713, 3843, 58, 156, "Output"]
}, {4}]],
Cell[77012, 1774, 103, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[77140, 1779, 2036, 51, 52, "Input"],
Cell[79179, 1832, 834, 18, 117, "Output"]
}, {2}]],
Cell[80025, 1853, 267, 3, 30, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80329, 1861, 113, 1, 67, "Subchapter"],
Cell[80445, 1864, 126, 1, 30, "Text"],
Cell[80574, 1867, 85108, 1400, 381, "Input"],
Cell[165685, 3269, 1993, 37, 120, "Input"],
Cell[167681, 3308, 251, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[167957, 3317, 1339, 41, 52, "Input"],
Cell[169299, 3360, 686, 15, 117, "Output"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170031, 3381, 163, 2, 67, "Subchapter"],
Cell[CellGroupData[{
Cell[170219, 3387, 463, 10, 67, "Subsubsection"],
Cell[170685, 3399, 540, 15, 32, "Text"],
Cell[CellGroupData[{
Cell[171250, 3418, 3656, 99, 172, "Input"],
Cell[174909, 3519, 2925, 52, 232, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177892, 3578, 260, 3, 67, "Subchapter"],
Cell[CellGroupData[{
Cell[178177, 3585, 7091, 148, 312, "Input"],
Cell[185271, 3735, 4120, 85, 526, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189428, 3825, 97, 1, 31, "Input"],
Cell[189528, 3828, 1854, 52, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191419, 3885, 306, 8, 31, "Input"],
Cell[191728, 3895, 3515, 122, 225, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195292, 4023, 277, 3, 67, "Subchapter"],
Cell[195572, 4028, 492, 9, 139, "Subsection"],
Cell[196067, 4039, 383, 7, 71, "Subsection"],
Cell[196453, 4048, 274, 5, 41, "Subsection"],
Cell[196730, 4055, 256, 3, 41, "Subsection"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
